var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.021,1,1.552]],["body/modules/AppModule.html",[0,1.891,1,3.016,2,1.45,3,1.924,4,2.249,5,2.249,6,1.666,7,2.249,8,2.249,9,2.683,10,2.683,11,2.541,12,0.053,13,2.541,14,2.835,15,2.249,16,1.924,17,0.606,18,0.606,19,0.415,20,3.342,21,0.507,22,4.213,23,4.213,24,2.835,25,2.835,26,1.148,27,1.45,28,3.342,29,3.342,30,0.606,31,0.831,32,0.041,33,0.041]],["title/classes/CreateUserDto.html",[31,0.67,34,1.343]],["body/classes/CreateUserDto.html",[12,0.054,17,0.437,18,0.437,19,0.299,21,0.366,26,0.843,30,0.437,31,0.843,32,0.033,33,0.033,34,1.688,35,2.409,36,1.934,37,1.119,38,3.387,39,3.387,40,3.387,41,2.719,42,0.739,43,0.437,44,1.119,45,1.575,46,1.575,47,1.635,48,0.837,49,1.334,50,3.144,51,3.916,52,3.916,53,2.014,54,2.409,55,4.868,56,3.387,57,3.387,58,2.255,59,2.409,60,1.47,61,3.972,62,3.916,63,2.409,64,3.387,65,3.916,66,2.409,67,3.916,68,2.409,69,2.719,70,2.409,71,3.387,72,3.387,73,3.387,74,3.387,75,3.387,76,3.387,77,2.409,78,4.249,79,1.934,80,3.916,81,3.387,82,2.409,83,2.409,84,2.409,85,1.699,86,2.409,87,2.409,88,2.409]],["title/interfaces/CustomUpdateQuery.html",[89,0.489,90,1.343]],["body/interfaces/CustomUpdateQuery.html",[12,0.055,17,0.333,18,0.333,19,0.228,21,0.278,26,0.456,30,0.503,32,0.027,33,0.027,37,0.606,42,0.744,43,0.333,44,0.916,45,1.65,46,1.106,47,1.106,48,1.005,49,1.423,53,1.83,60,1.452,85,1.957,89,0.727,90,1.668,91,0.796,92,0.914,93,1.867,94,1.598,95,2.511,96,1.867,97,1.867,98,1.867,99,2.308,100,2.346,101,1.598,102,1.413,103,1.383,104,1.867,105,1.518,106,1.383,107,1.383,108,1.867,109,1.867,110,0.796,111,0.796,112,1.05,113,0.796,114,0.914,115,0.796,116,0.914,117,0.914,118,0.914,119,1.05,120,0.914,121,0.914,122,1.452,123,1.267,124,0.914,125,2.149,126,0.914,127,1.452,128,0.796,129,0.914,130,0.914,131,0.914,132,0.914,133,1.597,134,0.914,135,0.694,136,1.05,137,0.914,138,0.796,139,1.204,140,1.668,141,1.598,142,1.619,143,1.383,144,1.598,145,1.056,146,1.056,147,0.796,148,1.204,149,1.056,150,1.056,151,1.867,152,2.149,153,1.867,154,1.867,155,1.867,156,1.234,157,1.234,158,2.511,159,1.234,160,1.234,161,1.234,162,1.234,163,1.234,164,1.234,165,1.867,166,1.234,167,0.914,168,0.694,169,1.056,170,0.796,171,1.056]],["title/injectables/MongoConfigService.html",[172,1.343,173,1.552]],["body/injectables/MongoConfigService.html",[12,0.054,17,0.458,18,0.458,19,0.314,21,0.531,26,0.999,27,1.096,30,0.458,31,0.628,32,0.034,33,0.034,41,2.81,43,0.458,48,0.54,58,2.016,89,0.635,101,1.455,103,2.523,142,1.096,170,1.882,172,1.745,173,2.497,174,1.7,175,2.028,176,3.482,177,2.355,178,3.314,179,4.925,180,3.954,181,3.5,182,4.017,183,4.337,184,2.81,185,2.355,186,4.337,187,2.028,188,2.526,189,4.064,190,2.526,191,3.5,192,1.7,193,1.455,194,3.5,195,3.5,196,3.5,197,3.5,198,2.526,199,3.5,200,3.5,201,3.5,202,2.81,203,3.5,204,4.337,205,2.355,206,2.703,207,4.337,208,2.028,209,1.455,210,1.7,211,2.028,212,1.7,213,2.526,214,1.7]],["title/modules/MongoDBModule.html",[0,1.021,11,1.343]],["body/modules/MongoDBModule.html",[0,1.865,2,1.519,11,2.162,12,0.054,17,0.635,18,0.635,19,0.435,21,0.531,25,2.919,26,1.225,27,1.519,30,0.635,31,0.871,32,0.042,33,0.042,173,2.498,177,2.919,178,2.919,189,3.482,208,2.811,209,2.017,215,3.502,216,2.919,217,2.811,218,4.338,219,3.502,220,3.502,221,3.502,222,3.502,223,3.502]],["title/interfaces/User.html",[42,0.409,89,0.489]],["body/interfaces/User.html",[12,0.054,17,0.454,18,0.454,19,0.311,21,0.38,30,0.631,32,0.034,33,0.034,42,0.757,43,0.454,44,1.149,45,1.552,46,1.552,47,1.552,48,1.03,49,1.509,60,1.509,89,0.631,91,1.086,100,2.545,105,1.779,110,1.086,111,1.086,112,0.948,113,1.086,114,1.247,115,1.086,116,1.247,117,1.247,118,1.247,119,0.948,120,1.247,121,1.247,122,1.509,123,1.317,124,1.247,127,1.509,128,1.509,129,2.153,130,1.733,131,1.733,132,1.733,133,1.913,134,1.733,135,1.317,136,1.636,137,1.733,138,1.509,139,1.874,224,1.684,225,2.792,226,2.792,227,2.488]],["title/controllers/UserController.html",[228,1.552,229,1.552]],["body/controllers/UserController.html",[12,0.054,17,0.385,18,0.385,19,0.263,21,0.647,26,1.06,27,0.92,30,0.385,31,0.528,32,0.03,33,0.03,34,2.345,37,1.021,42,0.777,43,0.385,48,0.66,49,1.152,50,2.928,58,2.1,79,1.702,85,0.92,101,1.78,102,1.518,135,1.613,142,0.92,168,1.739,185,2.08,192,2.08,193,1.78,205,2.993,206,3.229,210,2.08,211,1.702,212,1.427,214,2.454,228,2.1,229,1.78,230,1.702,231,1.702,232,2.121,233,3.091,234,3.853,235,2.481,236,2.481,237,4.008,238,2.121,239,2.121,240,3.091,241,3.091,242,2.121,243,3.647,244,2.121,245,2.481,246,1.702,247,3.42,248,2.121,249,3.218,250,2.928,251,3.218,252,3.091,253,3.091,254,3.647,255,2.121,256,3.091,257,3.091,258,2.121,259,2.121,260,2.121,261,1.583,262,1.702,263,1.702,264,1.702,265,3.091,266,2.121,267,2.121,268,2.121,269,2.121,270,2.121,271,2.121,272,2.121,273,1.702,274,2.928,275,2.121,276,1.702,277,1.702,278,2.481,279,2.121,280,2.121,281,2.121,282,3.647,283,2.121,284,2.121,285,1.702]],["title/interfaces/UserDocument.html",[89,0.489,126,1.343]],["body/interfaces/UserDocument.html",[12,0.054,17,0.305,18,0.305,19,0.209,21,0.255,26,0.418,30,0.471,32,0.025,33,0.025,37,0.555,42,0.746,43,0.305,44,0.858,45,1.59,46,1.404,47,1.404,48,1.059,49,1.463,53,1.769,60,1.377,85,1.904,89,0.74,90,1.294,91,0.73,92,0.838,93,1.132,94,0.968,95,2.135,96,1.132,97,1.132,98,1.132,99,1.827,100,2.399,102,1.201,103,1.294,104,2.135,105,1.705,106,1.581,107,1.778,108,2.135,109,2.135,110,0.73,111,0.73,112,0.983,113,0.73,114,0.838,115,0.73,116,0.838,117,0.838,118,0.838,119,0.983,120,0.838,121,0.838,122,1.377,123,1.201,124,0.838,125,2.221,126,1.294,127,1.548,128,1.127,129,1.778,130,1.294,131,1.294,132,1.294,133,1.8,134,1.294,135,0.983,136,1.46,137,1.294,138,1.127,139,1.673,140,1.581,141,1.495,142,1.548,143,1.294,144,1.495,145,0.968,146,0.968,147,0.73,148,1.127,149,0.968,150,0.968,151,1.747,152,2.055,153,1.747,154,1.747,155,1.747,156,1.132,157,1.132,158,2.401,159,1.132,160,1.132,161,1.132,162,1.132,163,1.132,164,1.132,165,1.747,166,1.132,167,0.838,168,0.637,169,0.968,170,0.73,171,0.968]],["title/modules/UserModule.html",[0,1.021,13,1.343]],["body/modules/UserModule.html",[0,1.844,2,1.336,3,1.773,4,2.072,5,2.072,6,1.535,7,2.987,8,2.987,12,0.054,13,2.532,14,2.69,15,2.072,16,1.773,17,0.559,18,0.559,19,0.382,21,0.467,25,2.072,26,1.211,27,1.336,30,0.559,31,0.766,32,0.039,33,0.039,42,0.607,140,1.535,148,1.735,168,1.166,177,2.69,193,1.773,209,1.773,217,2.472,229,2.557,230,3.209,261,2.309,262,2.472,286,2.472,287,2.472,288,2.472,289,3.079,290,3.209,291,3.209,292,3.079,293,3.079,294,3.079]],["title/interfaces/UserProfile.html",[89,0.489,227,1.552]],["body/interfaces/UserProfile.html",[12,0.054,17,0.492,18,0.492,19,0.337,21,0.412,30,0.667,32,0.036,33,0.036,37,0.896,42,0.747,43,0.492,44,1.214,45,1.214,46,1.214,47,1.214,48,0.998,49,1.459,60,1.177,89,0.667,91,1.177,100,2.454,105,1.579,110,1.595,111,1.595,112,1.692,113,1.595,114,1.832,115,1.595,116,1.832,117,1.832,118,1.832,119,1.692,120,1.352,121,1.352,122,2.027,123,1.823,124,1.832,127,1.177,128,1.177,129,1.352,130,1.352,131,1.352,132,1.352,133,1.692,134,1.352,135,1.027,136,1.027,137,1.352,138,1.177,139,1.177,224,1.826,225,2.951,226,2.951,227,2.401,295,2.951]],["title/interfaces/UserProfileDocument.html",[89,0.489,107,1.343]],["body/interfaces/UserProfileDocument.html",[12,0.054,17,0.322,18,0.322,19,0.221,21,0.27,26,0.442,30,0.492,32,0.026,33,0.026,37,0.895,42,0.747,43,0.322,44,0.895,45,1.512,46,1.085,47,1.085,48,1.052,49,1.415,53,1.808,60,1.176,85,1.938,89,0.756,90,1.35,91,0.771,92,0.886,93,1.196,94,1.023,95,2.209,96,1.196,97,1.196,98,1.196,99,1.891,100,2.281,102,1.243,103,1.35,104,2.209,105,1.578,106,1.636,107,1.636,108,2.209,109,2.209,110,1.176,111,1.176,112,1.497,113,1.176,114,1.35,115,1.176,116,1.35,117,1.35,118,1.35,119,1.497,120,0.886,121,0.886,122,1.808,123,1.641,124,1.35,125,2.115,126,0.886,127,1.425,128,0.771,129,0.886,130,0.886,131,0.886,132,0.886,133,1.578,134,0.886,135,0.673,136,1.026,137,0.886,138,0.771,139,1.176,140,1.636,141,1.56,142,1.593,143,1.35,144,1.56,145,1.023,146,1.023,147,0.771,148,1.176,149,1.023,150,1.023,151,1.823,152,2.115,153,1.823,154,1.823,155,1.823,156,1.196,157,1.196,158,2.471,159,1.196,160,1.196,161,1.196,162,1.196,163,1.196,164,1.196,165,1.823,166,1.196,167,0.886,168,0.673,169,1.023,170,0.771,171,1.023,295,2.175]],["title/injectables/UserService.html",[172,1.343,261,1.169]],["body/injectables/UserService.html",[12,0.054,17,0.311,18,0.311,19,0.213,21,0.487,26,1.064,27,0.743,30,0.311,31,0.426,32,0.026,33,0.026,34,1.938,37,0.87,42,0.766,43,0.311,45,1.06,46,0.87,47,1.06,48,0.686,49,1.036,58,2.075,101,1.848,102,1.62,103,0.854,105,0.649,106,0.854,110,0.743,111,1.143,112,0.649,113,1.143,119,0.649,123,0.649,133,0.649,135,0.998,136,0.649,142,1.563,167,1.796,168,1.473,172,1.313,174,1.153,176,2.115,184,1.375,185,1.773,187,1.375,192,2.16,193,1.848,205,2.763,206,3.047,209,0.987,210,1.773,212,1.153,214,2.424,216,1.153,234,3.635,235,2.115,236,2.115,245,2.577,246,2.115,247,2.892,249,3.122,250,2.577,251,2.892,261,1.143,263,1.375,264,1.375,273,2.115,274,2.892,276,2.115,277,2.115,278,2.892,285,2.115,290,2.115,296,1.375,297,2.634,298,2.634,299,3.603,300,1.713,301,1.713,302,2.634,303,2.634,304,1.713,305,3.21,306,3.21,307,2.634,308,1.713,309,2.634,310,3.603,311,1.713,312,2.634,313,2.634,314,3.21,315,1.713,316,1.713,317,2.634,318,2.634,319,1.713,320,1.713,321,3.21,322,2.634,323,1.713,324,2.634,325,2.634,326,2.634,327,2.634,328,1.713,329,1.713,330,1.713,331,1.713,332,1.713,333,2.634,334,1.713,335,1.713,336,1.713,337,1.713,338,1.713,339,1.713,340,1.713,341,2.634,342,1.713,343,1.713,344,2.634,345,1.713,346,1.713,347,1.713,348,2.634,349,1.713,350,1.713,351,1.713,352,1.713,353,1.153,354,1.713,355,1.713,356,1.713,357,2.634,358,1.713,359,1.713,360,1.713,361,1.713,362,1.713,363,1.713,364,1.713,365,1.713,366,1.713,367,1.713]],["title/coverage.html",[368,2.938]],["body/coverage.html",[6,1.593,12,0.053,19,0.397,31,0.795,32,0.04,33,0.04,34,1.593,36,2.565,42,0.621,48,0.683,89,0.894,90,1.593,92,2.512,102,1.21,107,1.593,126,1.593,128,1.387,143,1.593,148,1.387,152,1.84,172,2.041,173,1.84,175,2.565,224,2.755,227,1.84,228,1.84,229,1.84,231,2.565,261,1.387,296,2.565,368,2.565,369,2.565,370,3.196,371,2.565,372,5.349,373,4.765,374,3.196,375,4.765,376,4.095,377,3.196,378,4.519,379,3.196,380,3.196,381,3.196,382,3.196]],["title/miscellaneous/functions.html",[383,1.302,384,2.598]],["body/miscellaneous/functions.html",[6,2.519,12,0.047,24,2.772,32,0.047,33,0.047,43,0.748,371,3.308,383,2.373,384,3.308,385,4.12,386,4.12]],["title/index.html",[43,0.41,387,2.26,388,2.26]],["body/index.html",[3,1.95,12,0.053,16,1.387,19,0.299,24,2.279,32,0.033,33,0.033,37,1.294,42,0.704,53,1.045,61,3.144,94,1.387,99,1.387,106,1.952,115,1.942,138,1.045,147,1.045,178,1.621,180,1.934,216,2.279,291,1.934,353,1.621,369,1.934,389,3.387,390,3.727,391,3.828,392,4.642,393,2.409,394,2.719,395,3.387,396,2.719,397,3.144,398,1.621,399,2.409,400,2.409,401,2.409,402,3.387,403,3.387,404,4.249,405,2.409,406,2.409,407,2.409,408,2.409,409,2.409,410,2.409,411,2.409,412,2.409,413,2.409,414,2.409,415,2.409,416,2.409,417,2.409,418,2.409,419,2.409,420,2.409,421,2.409,422,2.409,423,2.409,424,3.916,425,2.409,426,2.409,427,2.409,428,2.409,429,3.387,430,2.409,431,2.409,432,2.409,433,2.409,434,4.476,435,3.387,436,2.409,437,2.409,438,2.409,439,2.409,440,3.916,441,2.409,442,2.409,443,2.409,444,2.409,445,3.916,446,2.409,447,2.409,448,2.409,449,2.409,450,2.409,451,3.387,452,2.409,453,3.387,454,2.279,455,2.409,456,2.409,457,3.387,458,2.409,459,3.387,460,3.387,461,2.409,462,2.409,463,2.409,464,2.409,465,2.409,466,2.409,467,2.409,468,2.409,469,2.409,470,2.409,471,1.934,472,2.409,473,2.409,474,2.409,475,2.409,476,2.409,477,3.387,478,3.387,479,2.409,480,2.409,481,2.409]],["title/modules.html",[2,1.588]],["body/modules.html",[1,2.329,2,1.755,11,2.016,12,0.046,13,2.016,32,0.046,33,0.046,353,2.721,471,3.798,482,4.731,483,4.731,484,5.015,485,4.044]],["title/overview.html",[398,2.463]],["body/overview.html",[0,1.343,1,2.98,2,1.539,3,2.043,4,2.387,5,2.387,6,1.768,7,2.387,8,2.387,9,2.848,10,2.848,11,2.362,12,0.051,13,2.579,14,2.942,15,2.387,16,2.043,31,0.882,32,0.043,33,0.043,69,2.848,91,1.539,174,2.387,228,2.043,261,2.275,286,2.848,287,2.848,288,2.848,398,2.387,486,4.372,487,3.547,488,3.547]],["title/properties.html",[44,1.069,489,2.26]],["body/properties.html",[12,0.052,21,0.598,32,0.046,33,0.046,44,1.302,147,1.711,170,1.711,390,3.165,391,3.165,394,3.165,396,3.165,397,3.165,490,3.942,491,3.942,492,3.942,493,3.942,494,3.942,495,3.942,496,3.942,497,3.942,498,3.942]],["title/miscellaneous/variables.html",[383,1.302,454,2.178]],["body/miscellaneous/variables.html",[12,0.054,32,0.038,33,0.038,42,0.732,43,0.542,45,0.987,46,0.987,47,0.987,48,1.106,49,1.335,53,2.148,85,2.221,92,1.489,102,1.484,105,1.484,112,1.131,119,1.131,122,1.296,123,1.131,125,1.72,127,1.701,133,1.484,136,1.131,139,1.296,140,2.18,141,2.257,143,2.18,144,2.257,145,1.72,146,1.72,147,1.296,148,1.898,149,2.675,150,1.72,167,1.489,168,1.131,169,1.72,170,1.296,171,1.72,202,3.512,383,1.72,454,2.01,499,4.375]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":346,"title":{},"body":{"injectables/UserService.html":{}}}],["0.0.1",{"_index":491,"title":{},"body":{"properties.html":{}}}],["1",{"_index":486,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":343,"title":{},"body":{"injectables/UserService.html":{}}}],["100",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["11000",{"_index":349,"title":{},"body":{"injectables/UserService.html":{}}}],["11001",{"_index":350,"title":{},"body":{"injectables/UserService.html":{}}}],["123456",{"_index":62,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["2",{"_index":487,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":336,"title":{},"body":{"injectables/UserService.html":{}}}],["201",{"_index":240,"title":{},"body":{"controllers/UserController.html":{}}}],["3",{"_index":69,"title":{},"body":{"classes/CreateUserDto.html":{},"overview.html":{}}}],["3/3",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":488,"title":{},"body":{"overview.html":{}}}],["6",{"_index":64,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["8/8",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":73,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["_id",{"_index":129,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["access",{"_index":196,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["account",{"_index":134,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["address",{"_index":60,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["algorithm",{"_index":493,"title":{},"body":{"properties.html":{}}}],["allows",{"_index":98,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["already",{"_index":322,"title":{},"body":{"injectables/UserService.html":{}}}],["api",{"_index":391,"title":{},"body":{"index.html":{},"properties.html":{}}}],["apiproperty",{"_index":78,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({example",{"_index":51,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiresponse",{"_index":265,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags",{"_index":266,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('users",{"_index":267,"title":{},"body":{"controllers/UserController.html":{}}}],["application",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":256,"title":{},"body":{"controllers/UserController.html":{}}}],["associated",{"_index":124,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["astro",{"_index":492,"title":{},"body":{"properties.html":{}}}],["astroalgorithm",{"_index":389,"title":{},"body":{"index.html":{}}}],["async",{"_index":234,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["authentication",{"_index":403,"title":{},"body":{"index.html":{}}}],["author",{"_index":496,"title":{},"body":{"properties.html":{}}}],["available",{"_index":353,"title":{},"body":{"injectables/UserService.html":{},"index.html":{},"modules.html":{}}}],["avatar",{"_index":111,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["avatarurl",{"_index":112,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":274,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":390,"title":{},"body":{"index.html":{},"properties.html":{}}}],["badrequestexception",{"_index":259,"title":{},"body":{"controllers/UserController.html":{}}}],["badrequestexception(error.message",{"_index":279,"title":{},"body":{"controllers/UserController.html":{}}}],["based",{"_index":170,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":318,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(password",{"_index":342,"title":{},"body":{"injectables/UserService.html":{}}}],["before",{"_index":155,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["body",{"_index":254,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstraps",{"_index":386,"title":{},"body":{"miscellaneous/functions.html":{}}}],["browse",{"_index":484,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":482,"title":{},"body":{"modules.html":{}}}],["catch",{"_index":276,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cd",{"_index":449,"title":{},"body":{"index.html":{}}}],["challenge",{"_index":147,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["challengeid",{"_index":120,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["challengename",{"_index":121,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["challenges",{"_index":115,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{}}}],["characters",{"_index":65,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters'})@matches(/^[a",{"_index":70,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":361,"title":{},"body":{"injectables/UserService.html":{}}}],["chosen",{"_index":130,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["class",{"_index":31,"title":{"classes/CreateUserDto.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":35,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["clone",{"_index":434,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":447,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":286,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":287,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":288,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["coding",{"_index":396,"title":{},"body":{"index.html":{},"properties.html":{}}}],["collection",{"_index":169,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":442,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":415,"title":{},"body":{"index.html":{}}}],["completed",{"_index":114,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["completedchallenges",{"_index":119,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["comprehensive",{"_index":427,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":218,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["configmodule.forroot",{"_index":220,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["configservice",{"_index":189,"title":{},"body":{"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{}}}],["configuration",{"_index":180,"title":{},"body":{"injectables/MongoConfigService.html":{},"index.html":{}}}],["conflictexception",{"_index":313,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception('email",{"_index":355,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception('username",{"_index":352,"title":{},"body":{"injectables/UserService.html":{}}}],["connection",{"_index":178,"title":{},"body":{"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"index.html":{}}}],["const",{"_index":142,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":187,"title":{},"body":{"injectables/MongoConfigService.html":{},"injectables/UserService.html":{}}}],["constructor(@injectmodel('users",{"_index":319,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":188,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["constructor(private",{"_index":211,"title":{},"body":{"injectables/MongoConfigService.html":{},"controllers/UserController.html":{}}}],["constructor(usermodel",{"_index":300,"title":{},"body":{"injectables/UserService.html":{}}}],["constructs",{"_index":191,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["contact",{"_index":459,"title":{},"body":{"index.html":{}}}],["contain",{"_index":74,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["containing",{"_index":116,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["contribute",{"_index":467,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":462,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":463,"title":{},"body":{"index.html":{}}}],["controller",{"_index":228,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('users",{"_index":268,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":230,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["convert",{"_index":153,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["coverage",{"_index":368,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":245,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["created",{"_index":135,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["created.'})@usepipes(new",{"_index":242,"title":{},"body":{"controllers/UserController.html":{}}}],["createdat",{"_index":136,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["createmongooseoptions",{"_index":186,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["creates",{"_index":199,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["createuser",{"_index":235,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":272,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":238,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(userdto",{"_index":303,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":34,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":41,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/MongoConfigService.html":{}}}],["creation",{"_index":306,"title":{},"body":{"injectables/UserService.html":{}}}],["custom",{"_index":94,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{}}}],["customupdatequery",{"_index":90,"title":{"interfaces/CustomUpdateQuery.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["d",{"_index":337,"title":{},"body":{"injectables/UserService.html":{}}}],["data",{"_index":37,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"index.html":{}}}],["database",{"_index":106,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"index.html":{}}}],["databases",{"_index":416,"title":{},"body":{"index.html":{}}}],["date",{"_index":133,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["date.now",{"_index":150,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":50,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":149,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":58,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/MongoConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["defines",{"_index":93,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["definition",{"_index":141,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":247,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":251,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteduser",{"_index":282,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":236,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@body('userid",{"_index":281,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":246,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deletion",{"_index":360,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["details",{"_index":423,"title":{},"body":{"index.html":{}}}],["developed",{"_index":399,"title":{},"body":{"index.html":{}}}],["document",{"_index":125,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":369,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documents",{"_index":97,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["dto",{"_index":40,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["dto/user.dto",{"_index":263,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["due",{"_index":325,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":430,"title":{},"body":{"index.html":{}}}],["email",{"_index":45,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":429,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":478,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":420,"title":{},"body":{"index.html":{}}}],["ensuring",{"_index":431,"title":{},"body":{"index.html":{}}}],["env",{"_index":422,"title":{},"body":{"index.html":{}}}],["environment",{"_index":453,"title":{},"body":{"index.html":{}}}],["error",{"_index":277,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["error.code",{"_index":348,"title":{},"body":{"injectables/UserService.html":{}}}],["error.keypattern?.email",{"_index":354,"title":{},"body":{"injectables/UserService.html":{}}}],["error.keypattern?.username",{"_index":351,"title":{},"body":{"injectables/UserService.html":{}}}],["errors",{"_index":327,"title":{},"body":{"injectables/UserService.html":{}}}],["example",{"_index":61,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["exists",{"_index":323,"title":{},"body":{"injectables/UserService.html":{}}}],["explore",{"_index":477,"title":{},"body":{"index.html":{}}}],["export",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["extends",{"_index":108,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["fails",{"_index":324,"title":{},"body":{"injectables/UserService.html":{}}}],["features",{"_index":291,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["feel",{"_index":465,"title":{},"body":{"index.html":{}}}],["fetches",{"_index":200,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":366,"title":{},"body":{"injectables/UserService.html":{}}}],["findallusers",{"_index":299,"title":{},"body":{"injectables/UserService.html":{}}}],["folder",{"_index":448,"title":{},"body":{"index.html":{}}}],["follow",{"_index":436,"title":{},"body":{"index.html":{}}}],["following",{"_index":441,"title":{},"body":{"index.html":{}}}],["format",{"_index":57,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["found",{"_index":285,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["free",{"_index":466,"title":{},"body":{"index.html":{}}}],["function",{"_index":152,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["functionality",{"_index":433,"title":{},"body":{"index.html":{}}}],["functions",{"_index":384,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":340,"title":{},"body":{"injectables/UserService.html":{}}}],["game",{"_index":397,"title":{},"body":{"index.html":{},"properties.html":{}}}],["generate",{"_index":184,"title":{},"body":{"injectables/MongoConfigService.html":{},"injectables/UserService.html":{}}}],["generation",{"_index":331,"title":{},"body":{"injectables/UserService.html":{}}}],["getallusers",{"_index":237,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":387,"title":{"index.html":{}},"body":{}}],["git",{"_index":443,"title":{},"body":{"index.html":{}}}],["graph",{"_index":485,"title":{},"body":{"modules.html":{}}}],["gravatar",{"_index":317,"title":{},"body":{"injectables/UserService.html":{}}}],["gravatar.url(email",{"_index":334,"title":{},"body":{"injectables/UserService.html":{}}}],["handles",{"_index":406,"title":{},"body":{"index.html":{}}}],["handling",{"_index":297,"title":{},"body":{"injectables/UserService.html":{}}}],["hashed",{"_index":131,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["hashedpassword",{"_index":341,"title":{},"body":{"injectables/UserService.html":{}}}],["hear",{"_index":476,"title":{},"body":{"index.html":{}}}],["hosts",{"_index":393,"title":{},"body":{"index.html":{}}}],["https://github.com/saharshpatel24/astroalgorithms.git",{"_index":444,"title":{},"body":{"index.html":{}}}],["id",{"_index":249,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ideas",{"_index":468,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":128,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["ids",{"_index":117,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["implements",{"_index":182,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["import",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{}}}],["improvements",{"_index":469,"title":{},"body":{"index.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["information",{"_index":132,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["inject",{"_index":223,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["injectable",{"_index":172,"title":{"injectables/MongoConfigService.html":{},"injectables/UserService.html":{}},"body":{"injectables/MongoConfigService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":174,"title":{},"body":{"injectables/MongoConfigService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":315,"title":{},"body":{"injectables/UserService.html":{}}}],["inquiries",{"_index":470,"title":{},"body":{"index.html":{}}}],["install",{"_index":445,"title":{},"body":{"index.html":{}}}],["integrates",{"_index":414,"title":{},"body":{"index.html":{}}}],["interact",{"_index":481,"title":{},"body":{"index.html":{}}}],["interaction",{"_index":413,"title":{},"body":{"index.html":{}}}],["interface",{"_index":89,"title":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["interface/user.interface",{"_index":264,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["interfaces",{"_index":91,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":314,"title":{},"body":{"injectables/UserService.html":{}}}],["internalservererrorexception('failed",{"_index":357,"title":{},"body":{"injectables/UserService.html":{}}}],["invalid",{"_index":56,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":81,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":80,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["jest",{"_index":426,"title":{},"body":{"index.html":{}}}],["last",{"_index":137,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["lastlogin",{"_index":139,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["lastloginat",{"_index":347,"title":{},"body":{"injectables/UserService.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["letters",{"_index":75,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["leveraging",{"_index":425,"title":{},"body":{"index.html":{}}}],["license",{"_index":494,"title":{},"body":{"properties.html":{}}}],["list",{"_index":113,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["literal",{"_index":295,"title":{},"body":{"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["logic",{"_index":330,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":138,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{}}}],["love",{"_index":475,"title":{},"body":{"index.html":{}}}],["lowercase",{"_index":154,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["manages",{"_index":402,"title":{},"body":{"index.html":{}}}],["managing",{"_index":233,"title":{},"body":{"controllers/UserController.html":{}}}],["matches",{"_index":83,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":87,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":55,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["method",{"_index":332,"title":{},"body":{"injectables/UserService.html":{}}}],["methods",{"_index":185,"title":{},"body":{"injectables/MongoConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":151,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["minlength",{"_index":82,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":86,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":88,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":383,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":167,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo.service",{"_index":219,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["mongo/mongo.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoconfigservice",{"_index":173,"title":{"injectables/MongoConfigService.html":{}},"body":{"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"coverage.html":{}}}],["mongodb",{"_index":216,"title":{},"body":{"modules/MongoDBModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["mongodb_uri",{"_index":201,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["mongodbmodule",{"_index":11,"title":{"modules/MongoDBModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":103,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["mongoose.document",{"_index":109,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["mongoose.model('users",{"_index":171,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":144,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["mongoose.schema.types.objectid",{"_index":145,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":217,"title":{},"body":{"modules/MongoDBModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":294,"title":{},"body":{"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":221,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["mongoosemoduleoptions",{"_index":207,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["mongooseoptionsfactory",{"_index":183,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["name",{"_index":193,"title":{},"body":{"injectables/MongoConfigService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["names",{"_index":118,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["navigate",{"_index":446,"title":{},"body":{"index.html":{}}}],["nest",{"_index":194,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["nest.js",{"_index":400,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["nestjs/config",{"_index":208,"title":{},"body":{"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{}}}],["nestjs/mongoose",{"_index":209,"title":{},"body":{"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["nestjs/swagger",{"_index":79,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["new",{"_index":102,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":307,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser",{"_index":344,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":158,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["node.js",{"_index":401,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":258,"title":{},"body":{"controllers/UserController.html":{}}}],["notfoundexception('user",{"_index":284,"title":{},"body":{"controllers/UserController.html":{}}}],["npm",{"_index":451,"title":{},"body":{"index.html":{}}}],["null",{"_index":310,"title":{},"body":{"injectables/UserService.html":{}}}],["number",{"_index":122,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["numbers",{"_index":76,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["object",{"_index":39,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["objectid",{"_index":364,"title":{},"body":{"injectables/UserService.html":{}}}],["obtaining",{"_index":455,"title":{},"body":{"index.html":{}}}],["open",{"_index":438,"title":{},"body":{"index.html":{}}}],["operations",{"_index":298,"title":{},"body":{"injectables/UserService.html":{}}}],["optional",{"_index":101,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["options",{"_index":179,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["otherwise",{"_index":309,"title":{},"body":{"injectables/UserService.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":398,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":489,"title":{"properties.html":{}},"body":{}}],["param",{"_index":210,"title":{},"body":{"injectables/MongoConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":192,"title":{},"body":{"injectables/MongoConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["passed",{"_index":252,"title":{},"body":{"controllers/UserController.html":{}}}],["password",{"_index":46,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patel",{"_index":498,"title":{},"body":{"properties.html":{}}}],["please",{"_index":458,"title":{},"body":{"index.html":{}}}],["points",{"_index":123,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":257,"title":{},"body":{"controllers/UserController.html":{}}}],["post()@apiresponse({status",{"_index":239,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":232,"title":{},"body":{"controllers/UserController.html":{}}}],["private",{"_index":320,"title":{},"body":{"injectables/UserService.html":{}}}],["profile",{"_index":105,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":404,"title":{},"body":{"index.html":{}}}],["promise",{"_index":206,"title":{},"body":{"injectables/MongoConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":421,"title":{},"body":{"index.html":{}}}],["properties",{"_index":44,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"properties.html":{}}}],["provided",{"_index":362,"title":{},"body":{"injectables/UserService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providing",{"_index":195,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["psaharsh24@gmail.com",{"_index":473,"title":{},"body":{"index.html":{}}}],["query",{"_index":96,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["r",{"_index":339,"title":{},"body":{"injectables/UserService.html":{}}}],["random",{"_index":328,"title":{},"body":{"injectables/UserService.html":{}}}],["randomavatarurl",{"_index":333,"title":{},"body":{"injectables/UserService.html":{}}}],["reach",{"_index":472,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":212,"title":{},"body":{"injectables/MongoConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["records",{"_index":410,"title":{},"body":{"index.html":{}}}],["ref",{"_index":146,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":356,"title":{},"body":{"injectables/UserService.html":{}}}],["registration",{"_index":407,"title":{},"body":{"index.html":{}}}],["related",{"_index":290,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["replace",{"_index":329,"title":{},"body":{"injectables/UserService.html":{}}}],["repo",{"_index":450,"title":{},"body":{"index.html":{}}}],["repository",{"_index":392,"title":{},"body":{"index.html":{}}}],["representing",{"_index":104,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["represents",{"_index":225,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserProfile.html":{}}}],["request",{"_index":253,"title":{},"body":{"controllers/UserController.html":{}}}],["required",{"_index":53,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["responsible",{"_index":177,"title":{},"body":{"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{}}}],["results",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":312,"title":{},"body":{"injectables/UserService.html":{}}}],["retrieves",{"_index":358,"title":{},"body":{"injectables/UserService.html":{}}}],["return",{"_index":214,"title":{},"body":{"injectables/MongoConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":205,"title":{},"body":{"injectables/MongoConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["robustness",{"_index":432,"title":{},"body":{"index.html":{}}}],["root",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":440,"title":{},"body":{"index.html":{}}}],["running",{"_index":457,"title":{},"body":{"index.html":{}}}],["s",{"_index":335,"title":{},"body":{"injectables/UserService.html":{}}}],["saharsh",{"_index":497,"title":{},"body":{"properties.html":{}}}],["saving",{"_index":156,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["schema",{"_index":140,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["schema/user.schema",{"_index":293,"title":{},"body":{"modules/UserModule.html":{}}}],["securely",{"_index":408,"title":{},"body":{"index.html":{}}}],["sensitive",{"_index":456,"title":{},"body":{"index.html":{}}}],["server",{"_index":461,"title":{},"body":{"index.html":{}}}],["service",{"_index":176,"title":{},"body":{"injectables/MongoConfigService.html":{},"injectables/UserService.html":{}}}],["sets",{"_index":203,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["settings",{"_index":181,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["setup",{"_index":452,"title":{},"body":{"index.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["space",{"_index":394,"title":{},"body":{"index.html":{},"properties.html":{}}}],["src/.../main.ts",{"_index":385,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/main.ts",{"_index":371,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mongo/mongo.module.ts",{"_index":215,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["src/mongo/mongo.service.ts",{"_index":175,"title":{},"body":{"injectables/MongoConfigService.html":{},"coverage.html":{}}}],["src/mongo/mongo.service.ts:10",{"_index":190,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["src/mongo/mongo.service.ts:22",{"_index":198,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["src/user/dto/user.dto.ts",{"_index":36,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts:21",{"_index":77,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.dto.ts:32",{"_index":59,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.dto.ts:44",{"_index":66,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/interface/user.interface.ts",{"_index":224,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserProfile.html":{},"coverage.html":{}}}],["src/user/schema/user.schema.ts",{"_index":92,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.controller.ts",{"_index":231,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:33",{"_index":244,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:46",{"_index":255,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:56",{"_index":248,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":289,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":296,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:13",{"_index":301,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":304,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:63",{"_index":311,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:74",{"_index":308,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":460,"title":{},"body":{"index.html":{}}}],["started",{"_index":388,"title":{"index.html":{}},"body":{}}],["statements",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":269,"title":{},"body":{"controllers/UserController.html":{}}}],["steps",{"_index":437,"title":{},"body":{"index.html":{}}}],["storage",{"_index":417,"title":{},"body":{"index.html":{}}}],["store",{"_index":419,"title":{},"body":{"index.html":{}}}],["string",{"_index":49,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":226,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserProfile.html":{}}}],["successfully",{"_index":241,"title":{},"body":{"controllers/UserController.html":{}}}],["support",{"_index":471,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":483,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":480,"title":{},"body":{"index.html":{}}}],["table",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["terminal",{"_index":439,"title":{},"body":{"index.html":{}}}],["test1234",{"_index":67,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["test@example.com",{"_index":52,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["testing",{"_index":424,"title":{},"body":{"index.html":{}}}],["themed",{"_index":395,"title":{},"body":{"index.html":{}}}],["this.configservice.get('mongodb_uri",{"_index":213,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["this.email",{"_index":160,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["this.email.tolowercase",{"_index":161,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["this.getupdate",{"_index":164,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["this.ismodified('email",{"_index":159,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["this.usermodel.create",{"_index":345,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.find",{"_index":359,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidanddelete(userid",{"_index":367,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":275,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(userid",{"_index":283,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findallusers",{"_index":280,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":412,"title":{},"body":{"index.html":{}}}],["throw",{"_index":278,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["throws",{"_index":321,"title":{},"body":{"injectables/UserService.html":{}}}],["tracks",{"_index":411,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":38,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["transform",{"_index":271,"title":{},"body":{"controllers/UserController.html":{}}}],["true",{"_index":85,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["true})@isemail",{"_index":54,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["true})@isstring()@minlength(3",{"_index":68,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["true})@isstring()@minlength(6",{"_index":63,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["try",{"_index":273,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["type",{"_index":48,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"injectables/MongoConfigService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":316,"title":{},"body":{"injectables/UserService.html":{}}}],["types.objectid.isvalid(userid",{"_index":365,"title":{},"body":{"injectables/UserService.html":{}}}],["unexpected",{"_index":326,"title":{},"body":{"injectables/UserService.html":{}}}],["unique",{"_index":127,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":428,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":495,"title":{},"body":{"properties.html":{}}}],["update",{"_index":95,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["update.email",{"_index":165,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["update.email.tolowercase",{"_index":166,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["updated",{"_index":162,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["updating",{"_index":99,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{}}}],["uri",{"_index":204,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["url",{"_index":110,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["use",{"_index":435,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":222,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["usepipes",{"_index":260,"title":{},"body":{"controllers/UserController.html":{}}}],["usepipes(new",{"_index":270,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":42,"title":{"interfaces/User.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":100,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["user.controller",{"_index":292,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":262,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":229,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdocument",{"_index":126,"title":{"interfaces/UserDocument.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["userdto",{"_index":305,"title":{},"body":{"injectables/UserService.html":{}}}],["userid",{"_index":250,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodel",{"_index":302,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":13,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":47,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["userprofile",{"_index":227,"title":{"interfaces/UserProfile.html":{}},"body":{"interfaces/User.html":{},"interfaces/UserProfile.html":{},"coverage.html":{}}}],["userprofiledocument",{"_index":107,"title":{"interfaces/UserProfileDocument.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["userprofileschema",{"_index":143,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":168,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["userschema",{"_index":148,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.pre('findoneandupdate",{"_index":163,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["userschema.pre('save",{"_index":157,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["userservice",{"_index":261,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":418,"title":{},"body":{"index.html":{}}}],["valid",{"_index":363,"title":{},"body":{"injectables/UserService.html":{}}}],["validationpipe",{"_index":243,"title":{},"body":{"controllers/UserController.html":{}}}],["validator",{"_index":84,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["value",{"_index":202,"title":{},"body":{"injectables/MongoConfigService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":197,"title":{},"body":{"injectables/MongoConfigService.html":{}}}],["variable",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":454,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["variety",{"_index":409,"title":{},"body":{"index.html":{}}}],["version",{"_index":490,"title":{},"body":{"properties.html":{}}}],["visit",{"_index":479,"title":{},"body":{"index.html":{}}}],["wavatar",{"_index":338,"title":{},"body":{"injectables/UserService.html":{}}}],["we'd",{"_index":474,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":464,"title":{},"body":{"index.html":{}}}],["within",{"_index":405,"title":{},"body":{"index.html":{}}}],["z0",{"_index":72,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":71,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nMongoDBModule\n\nMongoDBModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMongoDBModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Root module of the NestJS application\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MongoDBModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserModule } from './user/user.module';\nimport { MongoDBModule } from './mongo/mongo.module';\n\n/**\n * Root module of the NestJS application\n */\n@Module({\n  imports: [MongoDBModule, UserModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object (DTO) for creating a user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'test@example.com', required: true})@IsEmail({}, {message: 'Invalid email format'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:32\n                        \n                    \n\n            \n                \n                    Email address of the user.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '123456', required: true})@IsString()@MinLength(6, {message: 'Password must be at least 6 characters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:44\n                        \n                    \n\n            \n                \n                    Password of the user.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'test1234', required: true})@IsString()@MinLength(3, {message: 'Username must be at least 3 characters'})@Matches(/^[a-zA-Z0-9]+$/, {message: 'Username must contain only letters and numbers'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:21\n                        \n                    \n\n            \n                \n                    Username of the user.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsEmail, MinLength, Matches } from 'class-validator';\n\n/**\n * Data Transfer Object (DTO) for creating a user.\n */\nexport class CreateUserDto {\n  /**\n   * Username of the user.\n   * @example 'test1234'\n   */\n  @ApiProperty({\n    example: 'test1234',\n    required: true,\n  })\n  @IsString()\n  @MinLength(3, { message: 'Username must be at least 3 characters' })\n  @Matches(/^[a-zA-Z0-9]+$/, {\n    message: 'Username must contain only letters and numbers',\n  })\n  username: string;\n\n  /**\n   * Email address of the user.\n   * @example 'test@example.com'\n   */\n  @ApiProperty({\n    example: 'test@example.com',\n    required: true,\n  })\n  @IsEmail({}, { message: 'Invalid email format' })\n  email: string;\n\n  /**\n   * Password of the user.\n   * @example '123456'\n   */\n  @ApiProperty({\n    example: '123456',\n    required: true,\n  })\n  @IsString()\n  @MinLength(6, { message: 'Password must be at least 6 characters' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomUpdateQuery.html":{"url":"interfaces/CustomUpdateQuery.html","title":"interface - CustomUpdateQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomUpdateQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schema/user.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines a custom update query for user documents.\nIt allows updating the user's email.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    New email address for updating the user's email\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose';\n\n/**\n * Interface representing user profile data in the database.\n */\ninterface UserProfileDocument extends mongoose.Document {\n  /** URL of the user's avatar */\n  avatarURL: string;\n  /** List of completed challenges containing their IDs and names */\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  /** Number of points associated with the user */\n  points: number;\n}\n\n/**\n * Interface representing the user document in the database.\n */\ninterface UserDocument extends mongoose.Document {\n  /** Unique identifier for the user */\n  _id: string;\n  /** User's chosen username */\n  username: string;\n  /** User's email address */\n  email: string;\n  /** User's hashed password */\n  password: string;\n  /** User's profile information */\n  profile: UserProfileDocument;\n  /** Date when the user account was created */\n  createdAt: Date;\n  /** Date of the user's last login */\n  lastLogin: Date;\n}\n\n/**\n * Defines a custom update query for user documents.\n * It allows updating the user's email.\n */\ninterface CustomUpdateQuery {\n  /** New email address for updating the user's email */\n  email?: string;\n}\n\n\n/**\n * Schema definition for the user profile.\n */\nconst userProfileSchema = new mongoose.Schema({\n  avatarURL: {\n    type: String,\n    required: true,\n  },\n  completedChallenges: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Challenge',\n    },\n  ],\n  points: {\n    type: Number,\n    required: true,\n  },\n});\n\n/**\n * Schema definition for the user document.\n */\nexport const userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  profile: {\n    type: userProfileSchema,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastLogin: {\n    type: Date,\n  },\n});\n\n/**\n * Middleware function to convert the email to lowercase before saving the user document.\n */\nuserSchema.pre('save', function (next) {\n  if (this.isModified('email')) {\n    this.email = this.email.toLowerCase();\n  }\n  next();\n});\n\n/**\n * Middleware function to convert the updated email to lowercase before updating the user document.\n */\nuserSchema.pre('findOneAndUpdate', function (next) {\n  const update = this.getUpdate() as CustomUpdateQuery;\n  if (update && update.email) {\n    update.email = update.email.toLowerCase();\n  }\n  next();\n});\n\n/**\n * Model for the 'Users' collection based on the user schema.\n */\nexport const User = mongoose.model('Users', userSchema);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongoConfigService.html":{"url":"injectables/MongoConfigService.html","title":"injectable - MongoConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MongoConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mongo/mongo.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for creating Mongoose connection options based on configuration settings.\nThis service implements the MongooseOptionsFactory interface to generate Mongoose options.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mongo/mongo.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs the MongoConfigService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Nest ConfigService providing access to configuration values.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMongooseOptions\n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/mongo/mongo.service.ts:22\n                        \n                    \n\n\n            \n                \n                        Creates Mongoose connection options based on configuration.\nFetches the 'MONGODB_URI' value from the configuration and sets it as the URI for the Mongoose connection.\n\n\n                        \n                            Returns :     Promise | MongooseModuleOptions\n\n                        \n                            \n                                \nMongoose connection options\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { MongooseModuleOptions, MongooseOptionsFactory } from '@nestjs/mongoose';\n\n/**\n * Service responsible for creating Mongoose connection options based on configuration settings.\n * This service implements the MongooseOptionsFactory interface to generate Mongoose options.\n */\n@Injectable()\nexport class MongoConfigService implements MongooseOptionsFactory {\n  /**\n   * Constructs the MongoConfigService.\n   * @param {ConfigService} configService - The Nest ConfigService providing access to configuration values.\n   */\n  constructor(private readonly configService: ConfigService) {}\n\n  /**\n   * Creates Mongoose connection options based on configuration.\n   * Fetches the 'MONGODB_URI' value from the configuration and sets it as the URI for the Mongoose connection.\n   * @returns {Promise | MongooseModuleOptions} - Mongoose connection options\n   */\n  createMongooseOptions(): Promise | MongooseModuleOptions {\n    const uri = this.configService.get('MONGODB_URI');\n    return {\n      uri\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoDBModule.html":{"url":"modules/MongoDBModule.html","title":"module - MongoDBModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoDBModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mongo/mongo.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module responsible for MongoDB Connection.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongoConfigService } from './mongo.service';\n\n/**\n * Module responsible for MongoDB Connection.\n */\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: MongoConfigService,\n      inject: [ConfigService],\n    }),\n  ],\n})\nexport class MongoDBModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/user.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the structure of a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            lastLogin\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            profile\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date when the user account was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLogin:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of the user's last login\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's hashed password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profile:         UserProfile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserProfile\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's profile information\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's chosen username\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface UserProfile {\n  /** URL of the user's avatar */\n  avatarURL: string;\n  /** List of completed challenges containing their IDs and names */\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  /** Number of points associated with the user */\n  points: number;\n}\n\n/**\n * Represents the structure of a user.\n */\nexport interface User {\n  /** Unique identifier for the user */\n  _id: string;\n  /** User's chosen username */\n  username: string;\n  /** User's email address */\n  email: string;\n  /** User's hashed password */\n  password: string;\n  /** User's profile information */\n  profile: UserProfile;\n  /** Date when the user account was created */\n  createdAt: Date;\n  /** Date of the user's last login */\n  lastLogin: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n            \n                Description\n            \n            \n                Controller for managing users\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    Async\n                                getAllUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({status: 201, description: 'The user has been successfully created.'})@UsePipes(new ValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:33\n                        \n                    \n\n\n            \n                \n                        Create a new user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser data to be created\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe created user\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:56\n                        \n                    \n\n\n            \n                \n                        Delete a user by ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the user to be deleted (passed in the request body)\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe deleted user\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:46\n                        \n                    \n\n\n            \n                \n                        Get all users\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nArray of users\n\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Body,\n  NotFoundException,\n  BadRequestException,\n  ValidationPipe,\n  UsePipes,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/user.dto';\nimport { User } from './interface/user.interface';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for managing users\n */\n@ApiTags('Users')\n@Controller('users')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  /**\n   * Create a new user\n   * @param {CreateUserDto} createUserDto - User data to be created\n   * @returns {Promise} - The created user\n   */\n  @Post()\n  @ApiResponse({ status: 201, description: 'The user has been successfully created.'})\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.userService.createUser(createUserDto);\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  /**\n   * Get all users\n   * @returns {Promise} - Array of users\n   */\n  @Get()\n  async getAllUsers(): Promise {\n    return await this.userService.findAllUsers();\n  }\n\n  /**\n   * Delete a user by ID\n   * @param {string} userId - ID of the user to be deleted (passed in the request body)\n   * @returns {Promise} - The deleted user\n   */\n  @Delete()\n  async deleteUser(@Body('userId') userId: string): Promise {\n    const deletedUser = await this.userService.deleteUser(userId);\n    if (!deletedUser) {\n      throw new NotFoundException('User not found');\n    }\n    return deletedUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDocument.html":{"url":"interfaces/UserDocument.html","title":"interface - UserDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schema/user.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the user document in the database.\n\n            \n\n            \n                Extends\n            \n            \n                        mongoose.Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            lastLogin\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            profile\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date when the user account was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLogin:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of the user's last login\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's hashed password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profile:         UserProfileDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserProfileDocument\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's profile information\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's chosen username\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose';\n\n/**\n * Interface representing user profile data in the database.\n */\ninterface UserProfileDocument extends mongoose.Document {\n  /** URL of the user's avatar */\n  avatarURL: string;\n  /** List of completed challenges containing their IDs and names */\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  /** Number of points associated with the user */\n  points: number;\n}\n\n/**\n * Interface representing the user document in the database.\n */\ninterface UserDocument extends mongoose.Document {\n  /** Unique identifier for the user */\n  _id: string;\n  /** User's chosen username */\n  username: string;\n  /** User's email address */\n  email: string;\n  /** User's hashed password */\n  password: string;\n  /** User's profile information */\n  profile: UserProfileDocument;\n  /** Date when the user account was created */\n  createdAt: Date;\n  /** Date of the user's last login */\n  lastLogin: Date;\n}\n\n/**\n * Defines a custom update query for user documents.\n * It allows updating the user's email.\n */\ninterface CustomUpdateQuery {\n  /** New email address for updating the user's email */\n  email?: string;\n}\n\n\n/**\n * Schema definition for the user profile.\n */\nconst userProfileSchema = new mongoose.Schema({\n  avatarURL: {\n    type: String,\n    required: true,\n  },\n  completedChallenges: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Challenge',\n    },\n  ],\n  points: {\n    type: Number,\n    required: true,\n  },\n});\n\n/**\n * Schema definition for the user document.\n */\nexport const userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  profile: {\n    type: userProfileSchema,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastLogin: {\n    type: Date,\n  },\n});\n\n/**\n * Middleware function to convert the email to lowercase before saving the user document.\n */\nuserSchema.pre('save', function (next) {\n  if (this.isModified('email')) {\n    this.email = this.email.toLowerCase();\n  }\n  next();\n});\n\n/**\n * Middleware function to convert the updated email to lowercase before updating the user document.\n */\nuserSchema.pre('findOneAndUpdate', function (next) {\n  const update = this.getUpdate() as CustomUpdateQuery;\n  if (update && update.email) {\n    update.email = update.email.toLowerCase();\n  }\n  next();\n});\n\n/**\n * Model for the 'Users' collection based on the user schema.\n */\nexport const User = mongoose.model('Users', userSchema);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module responsible for user-related features.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { userSchema } from './schema/user.schema';\n\n/**\n * Module responsible for user-related features.\n */\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'Users', schema: userSchema }]),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProfile.html":{"url":"interfaces/UserProfile.html","title":"interface - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/user.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents user profile data structure.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarURL\n                                        \n                                \n                                \n                                        \n                                            completedChallenges\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarURL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL of the user's avatar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        completedChallenges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completedChallenges:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of completed challenges containing their IDs and names\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of points associated with the user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface UserProfile {\n  /** URL of the user's avatar */\n  avatarURL: string;\n  /** List of completed challenges containing their IDs and names */\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  /** Number of points associated with the user */\n  points: number;\n}\n\n/**\n * Represents the structure of a user.\n */\nexport interface User {\n  /** Unique identifier for the user */\n  _id: string;\n  /** User's chosen username */\n  username: string;\n  /** User's email address */\n  email: string;\n  /** User's hashed password */\n  password: string;\n  /** User's profile information */\n  profile: UserProfile;\n  /** Date when the user account was created */\n  createdAt: Date;\n  /** Date of the user's last login */\n  lastLogin: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProfileDocument.html":{"url":"interfaces/UserProfileDocument.html","title":"interface - UserProfileDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserProfileDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schema/user.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing user profile data in the database.\n\n            \n\n            \n                Extends\n            \n            \n                        mongoose.Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarURL\n                                        \n                                \n                                \n                                        \n                                            completedChallenges\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarURL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL of the user's avatar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        completedChallenges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completedChallenges:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of completed challenges containing their IDs and names\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of points associated with the user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose';\n\n/**\n * Interface representing user profile data in the database.\n */\ninterface UserProfileDocument extends mongoose.Document {\n  /** URL of the user's avatar */\n  avatarURL: string;\n  /** List of completed challenges containing their IDs and names */\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  /** Number of points associated with the user */\n  points: number;\n}\n\n/**\n * Interface representing the user document in the database.\n */\ninterface UserDocument extends mongoose.Document {\n  /** Unique identifier for the user */\n  _id: string;\n  /** User's chosen username */\n  username: string;\n  /** User's email address */\n  email: string;\n  /** User's hashed password */\n  password: string;\n  /** User's profile information */\n  profile: UserProfileDocument;\n  /** Date when the user account was created */\n  createdAt: Date;\n  /** Date of the user's last login */\n  lastLogin: Date;\n}\n\n/**\n * Defines a custom update query for user documents.\n * It allows updating the user's email.\n */\ninterface CustomUpdateQuery {\n  /** New email address for updating the user's email */\n  email?: string;\n}\n\n\n/**\n * Schema definition for the user profile.\n */\nconst userProfileSchema = new mongoose.Schema({\n  avatarURL: {\n    type: String,\n    required: true,\n  },\n  completedChallenges: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Challenge',\n    },\n  ],\n  points: {\n    type: Number,\n    required: true,\n  },\n});\n\n/**\n * Schema definition for the user document.\n */\nexport const userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  profile: {\n    type: userProfileSchema,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastLogin: {\n    type: Date,\n  },\n});\n\n/**\n * Middleware function to convert the email to lowercase before saving the user document.\n */\nuserSchema.pre('save', function (next) {\n  if (this.isModified('email')) {\n    this.email = this.email.toLowerCase();\n  }\n  next();\n});\n\n/**\n * Middleware function to convert the updated email to lowercase before updating the user document.\n */\nuserSchema.pre('findOneAndUpdate', function (next) {\n  const update = this.getUpdate() as CustomUpdateQuery;\n  if (update && update.email) {\n    update.email = update.email.toLowerCase();\n  }\n  next();\n});\n\n/**\n * Model for the 'Users' collection based on the user schema.\n */\nexport const User = mongoose.model('Users', userSchema);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service handling user-related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findAllUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(userDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Create a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser data for creation.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Newly created user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Delete a user by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the user to be deleted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Deleted user if found, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Retrieve all users.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                List of all users.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { CreateUserDto } from './dto/user.dto';\nimport { User } from './interface/user.interface';\nimport * as gravatar from 'gravatar';\nimport * as bcrypt from 'bcrypt';\n\n/**\n * Service handling user-related operations.\n */\n@Injectable()\nexport class UserService {\n  constructor(@InjectModel('Users') private readonly userModel: Model) {}\n\n  /**\n   * Create a new user.\n   * @param {CreateUserDto} userDto - User data for creation.\n   * @returns {Promise} Newly created user.\n   * @throws {ConflictException} If username or email already exists.\n   * @throws {InternalServerErrorException} If creation fails due to unexpected errors.\n   */\n  async createUser(userDto: CreateUserDto): Promise {\n    try {\n      const { username, email, password } = userDto;\n\n      // Generate a random avatar URL (replace this logic with your avatar generation method)\n      const randomAvatarUrl = gravatar.url(email, { s: '200', d: 'wavatar', r: 'g' });\n\n      const hashedPassword = await bcrypt.hash(password, 10);\n\n      const newUser = await this.userModel.create({\n        username,\n        email,\n        password: hashedPassword,\n        profile: {\n          avatarURL: randomAvatarUrl,\n          completedChallenges: [],\n          points: 0,\n        },\n        createdAt: new Date(),\n        lastLoginAt: null,\n      });\n\n      return newUser;\n    } catch (error) {\n      if (error.code === 11000 || error.code === 11001) {\n        if (error.keyPattern?.username) {\n          throw new ConflictException('Username is not available');\n        } else if (error.keyPattern?.email) {\n          throw new ConflictException('Email is already registered');\n        }\n      } else {\n        throw new InternalServerErrorException('Failed to create user');\n      }\n    }\n  }\n\n  /**\n   * Retrieve all users.\n   * @returns {Promise} List of all users.\n   */\n  async findAllUsers(): Promise {\n    // Retrieves all users from the database\n    return await this.userModel.find();\n  }\n\n  /**\n   * Delete a user by ID.\n   * @param {string} userId - ID of the user to be deleted.\n   * @returns {Promise} Deleted user if found, otherwise null.\n   * @throws {InternalServerErrorException} If deletion fails due to unexpected errors.\n   */\n  async deleteUser(userId: string): Promise {\n    try {\n      // Check if the provided userId is a valid MongoDB ObjectId\n      if (!Types.ObjectId.isValid(userId)) {\n        return null;\n      }\n      // Find and delete the user by ID\n      return await this.userModel.findByIdAndDelete(userId);\n    } catch (error) {\n      throw new InternalServerErrorException('Failed to delete user');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mongo/mongo.service.ts\n            \n            injectable\n            MongoConfigService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/user/interface/user.interface.ts\n            \n            interface\n            User\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/user/interface/user.interface.ts\n            \n            interface\n            UserProfile\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            interface\n            CustomUpdateQuery\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            interface\n            UserDocument\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            interface\n            UserProfileDocument\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            userProfileSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            userSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                80 %\n                (4/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        Bootstraps the application.\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🚀 AstroAlgorithm Backend API 🌟\nThis repository hosts the backend API for AstroAlgorithm, a space-themed coding challenges game. 🛸✨\nOverview 🌌\nThe backend API, developed with NEST.js and Node.js, manages user authentication, challenge data, and user progress within the game. 🛰️📊\nFeatures 🚀\n\nAuthentication: Handles user login and registration securely. 🔐\nChallenges: Manages a variety of space-themed coding challenges. 🌠\nUser Progress: Records and tracks user progress through challenges. 📈\nDatabase Interaction: Integrates with MongoDB or compatible databases for data storage. 🗄️\n\nDatabase 📂\nThe backend uses MongoDB to store user data, challenges, and game progress. Ensure proper configuration by updating the .env file with your database connection details. 📝\nTesting 🧪\nLeveraging Jest for comprehensive unit testing and end-to-end (E2E) testing, ensuring robustness and functionality of our backend API. 🛠️  \nClone and Use the Repository 📥\nFollow these steps to clone and use the repository:\n\nClone the Repository: Open your terminal and run the following command to clone the repository:\nExample :git clone https://github.com/SaharshPatel24/AstroAlgorithms.git\nInstall Dependencies: Navigate into the cloned repository folder and install dependencies:\nExample :cd your-repo\nnpm install\nSetup Environment Variables: For obtaining sensitive or custom environment variables required for running this application, please contact me. 📧\n\nRun the Application: Start the backend server by running:\nExample :npm run start\n\nContributing 🌟\nContributions are welcome! Feel free to contribute your ideas and improvements. 🙌\nContact 📩\nFor inquiries or support, reach out to us at psaharsh24@gmail.com. We'd love to hear from you! 🚀\nExplore API Endpoints 🛰️\n Visit Swagger API Documentation to explore and interact with the available API endpoints.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoDBModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nMongoDBModule\n\nMongoDBModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMongoDBModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Backend API for Astro Algorithm, a space-based coding challenge game\n        \n            License : UNLICENSED\n        \n            Author : Saharsh Patel\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            User   (src/.../user.schema.ts)\n                        \n                        \n                            userProfileSchema   (src/.../user.schema.ts)\n                        \n                        \n                            userSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.model('Users', userSchema)\n                    \n                \n\n            \n                \n                    Model for the 'Users' collection based on the user schema.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userProfileSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  avatarURL: {\n    type: String,\n    required: true,\n  },\n  completedChallenges: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Challenge',\n    },\n  ],\n  points: {\n    type: Number,\n    required: true,\n  },\n})\n                    \n                \n\n            \n                \n                    Schema definition for the user profile.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  profile: {\n    type: userProfileSchema,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastLogin: {\n    type: Date,\n  },\n})\n                    \n                \n\n            \n                \n                    Schema definition for the user document.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
