var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.969,1,1.502]],["body/modules/AppModule.html",[0,1.792,1,2.912,2,1.384,3,1.858,4,2.182,5,2.182,6,1.599,7,2.182,8,2.182,9,2.617,10,2.617,11,2.44,12,0.056,13,2.44,14,2.751,15,2.182,16,1.858,17,0.648,18,0.648,19,0.441,20,3.276,21,0.54,22,4.13,23,4.13,24,2.751,25,2.751,26,1.235,27,1.599,28,3.276,29,3.276,30,0.648,31,0.894,32,0.043,33,0.043]],["title/classes/CreateUserDto.html",[31,0.723,34,1.293]],["body/classes/CreateUserDto.html",[12,0.057,17,0.467,18,0.467,19,0.318,21,0.389,26,0.906,30,0.467,31,0.906,32,0.035,33,0.035,34,1.621,35,2.362,36,1.887,37,1.052,38,3.32,39,3.32,40,3.32,41,3.32,42,0.642,43,0.467,44,1.052,45,1.481,46,1.481,47,1.537,48,0.897,49,1.242,50,3.067,51,3.839,52,3.839,53,1.922,54,2.362,55,4.772,56,3.32,57,3.32,58,2.558,59,2.362,60,1.403,61,3.874,62,3.839,63,2.362,64,3.32,65,3.839,66,2.362,67,3.839,68,2.362,69,2.652,70,2.362,71,3.32,72,3.32,73,3.32,74,3.32,75,3.32,76,3.32,77,2.362,78,4.164,79,1.887,80,3.839,81,3.32,82,2.362,83,2.362,84,2.362,85,1.622,86,2.362,87,2.362,88,2.362]],["title/interfaces/CustomUpdateQuery.html",[89,0.524,90,1.293]],["body/interfaces/CustomUpdateQuery.html",[12,0.057,17,0.355,18,0.355,19,0.242,21,0.296,26,0.491,30,0.538,32,0.029,33,0.029,37,0.569,42,0.647,43,0.355,44,0.862,45,1.552,46,1.039,47,1.039,48,1.078,49,1.325,53,1.746,60,1.386,85,1.868,89,0.777,90,1.602,91,0.759,92,0.877,93,1.812,94,1.543,95,2.437,96,1.812,97,1.812,98,1.812,99,2.229,100,2.252,101,1.812,102,1.339,103,1.543,104,1.812,105,1.438,106,1.328,107,1.328,108,1.812,109,1.812,110,0.759,111,0.759,112,0.996,113,0.759,114,0.877,115,0.759,116,0.877,117,0.877,118,0.877,119,0.996,120,0.877,121,0.877,122,1.386,123,1.201,124,0.877,125,2.075,126,0.877,127,1.386,128,0.759,129,0.877,130,0.877,131,0.877,132,0.877,133,1.513,134,0.877,135,0.658,136,0.996,137,0.877,138,0.759,139,1.149,140,1.602,141,1.543,142,1.786,143,1.328,144,1.543,145,1.02,146,1.02,147,0.759,148,1.149,149,1.02,150,1.02,151,1.812,152,2.075,153,1.812,154,1.812,155,1.812,156,1.197,157,1.197,158,2.437,159,1.197,160,1.197,161,1.197,162,1.197,163,1.197,164,1.197,165,1.812,166,1.197,167,0.877,168,0.658,169,1.02,170,0.877,171,1.02]],["title/modules/MongoDBModule.html",[0,0.969,11,1.293]],["body/modules/MongoDBModule.html",[0,1.735,2,1.375,11,2.009,12,0.057,17,0.644,18,0.644,19,0.438,21,0.537,25,2.741,26,1.294,27,1.59,30,0.644,31,0.889,32,0.043,33,0.043,172,3.256,173,3.286,174,4.114,175,2.741,176,3.286,177,2.601,178,2.169,179,4.738,180,4.99,181,3.256,182,3.256,183,2.601,184,3.256,185,3.256,186,2.601,187,3.256,188,2.169,189,3.256,190,3.256,191,4.114,192,3.256]],["title/interfaces/User.html",[42,0.356,89,0.524]],["body/interfaces/User.html",[12,0.057,17,0.485,18,0.485,19,0.33,21,0.405,30,0.674,32,0.036,33,0.036,42,0.658,43,0.485,44,1.08,45,1.459,46,1.459,47,1.459,48,1.103,49,1.405,60,1.44,89,0.674,91,1.036,100,2.444,105,1.686,110,1.036,111,1.036,112,0.898,113,1.036,114,1.198,115,1.036,116,1.198,117,1.198,118,1.198,119,0.898,120,1.198,121,1.198,122,1.44,123,1.248,124,1.198,127,1.44,128,1.44,129,2.067,130,1.665,131,1.665,132,1.665,133,1.813,134,1.665,135,1.248,136,1.55,137,1.665,138,1.44,139,1.789,193,1.635,194,2.723,195,2.723,196,2.402]],["title/controllers/UserController.html",[197,1.502,198,1.502]],["body/controllers/UserController.html",[12,0.057,17,0.411,18,0.411,19,0.28,21,0.689,26,1.14,27,1.015,30,0.411,31,0.567,32,0.032,33,0.032,34,2.252,37,0.96,42,0.676,43,0.411,48,0.708,49,1.073,50,2.856,58,2.382,79,1.66,85,0.878,101,2.019,102,1.438,135,1.529,142,1.015,168,1.648,188,3.134,197,2.028,198,1.719,199,1.66,200,1.66,201,2.079,202,3.03,203,2.42,204,2.42,205,2.42,206,3.929,207,2.079,208,2.079,209,3.03,210,3.03,211,2.079,212,3.575,213,2.079,214,2.42,215,2.42,216,2.019,217,3.483,218,3.758,219,1.66,220,3.336,221,2.079,222,3.138,223,2.856,224,3.138,225,3.03,226,3.03,227,3.575,228,2.079,229,3.03,230,3.03,231,2.079,232,2.079,233,2.079,234,1.51,235,1.66,236,1.66,237,1.66,238,3.03,239,2.079,240,2.079,241,2.079,242,2.079,243,1.66,244,2.42,245,2.079,246,2.079,247,2.079,248,2.079,249,1.66,250,2.856,251,2.856,252,2.079,253,1.66,254,1.66,255,2.42,256,2.079,257,2.079,258,2.079,259,3.575,260,2.079,261,2.079,262,1.66]],["title/interfaces/UserDocument.html",[89,0.524,126,1.293]],["body/interfaces/UserDocument.html",[12,0.057,17,0.326,18,0.326,19,0.222,21,0.272,26,0.45,30,0.503,32,0.027,33,0.027,37,0.522,42,0.649,43,0.326,44,0.806,45,1.495,46,1.319,47,1.319,48,1.135,49,1.362,53,1.688,60,1.314,85,1.817,89,0.79,90,1.243,91,0.696,92,0.805,93,1.098,94,0.935,95,2.072,96,1.098,97,1.098,98,1.098,99,1.764,100,2.304,102,1.138,103,1.444,104,2.072,105,1.616,106,1.518,107,1.708,108,2.072,109,2.072,110,0.696,111,0.696,112,0.932,113,0.696,114,0.805,115,0.696,116,0.805,117,0.805,118,0.805,119,0.932,120,0.805,121,0.805,122,1.314,123,1.138,124,0.805,125,2.144,126,1.243,127,1.477,128,1.075,129,1.708,130,1.243,131,1.243,132,1.243,133,1.705,134,1.243,135,0.932,136,1.384,137,1.243,138,1.075,139,1.597,140,1.518,141,1.444,142,1.708,143,1.243,144,1.444,145,0.935,146,0.935,147,0.696,148,1.075,149,0.935,150,0.935,151,1.696,152,1.984,153,1.696,154,1.696,155,1.696,156,1.098,157,1.098,158,2.33,159,1.098,160,1.098,161,1.098,162,1.098,163,1.098,164,1.098,165,1.696,166,1.098,167,0.805,168,0.603,169,0.935,170,0.805,171,0.935]],["title/modules/UserModule.html",[0,0.969,13,1.293]],["body/modules/UserModule.html",[0,1.748,2,1.275,3,1.712,4,2.011,5,2.011,6,1.474,7,2.899,8,2.899,12,0.056,13,2.432,14,2.611,15,2.011,16,1.712,17,0.597,18,0.597,19,0.406,21,0.498,25,2.011,26,1.303,27,1.474,30,0.597,31,0.824,32,0.041,33,0.041,42,0.527,140,1.474,148,1.656,168,1.105,173,3.13,177,2.411,178,2.011,198,2.469,199,3.13,216,2.011,234,2.204,235,2.411,263,2.411,264,2.411,265,2.411,266,3.018,267,3.13,268,3.13,269,3.018,270,3.018,271,3.018]],["title/interfaces/UserProfile.html",[89,0.524,196,1.502]],["body/interfaces/UserProfile.html",[12,0.057,17,0.526,18,0.526,19,0.358,21,0.439,30,0.713,32,0.038,33,0.038,37,0.843,42,0.65,43,0.526,44,1.142,45,1.142,46,1.142,47,1.142,48,1.069,49,1.359,60,1.124,89,0.713,91,1.124,100,2.357,105,1.496,110,1.522,111,1.522,112,1.604,113,1.522,114,1.759,115,1.522,116,1.759,117,1.759,118,1.759,119,1.604,120,1.299,121,1.299,122,1.934,123,1.728,124,1.759,127,1.124,128,1.124,129,1.299,130,1.299,131,1.299,132,1.299,133,1.604,134,1.299,135,0.974,136,0.974,137,1.299,138,1.124,139,1.124,193,1.772,194,2.879,195,2.879,196,2.319,272,2.879]],["title/interfaces/UserProfileDocument.html",[89,0.524,107,1.293]],["body/interfaces/UserProfileDocument.html",[12,0.057,17,0.344,18,0.344,19,0.234,21,0.287,26,0.476,30,0.525,32,0.028,33,0.028,37,0.841,42,0.649,43,0.344,44,0.841,45,1.421,46,1.02,47,1.02,48,1.127,49,1.317,53,1.725,60,1.122,85,1.85,89,0.808,90,1.297,91,0.736,92,0.85,93,1.161,94,0.988,95,2.144,96,1.161,97,1.161,98,1.161,99,1.826,100,2.19,102,1.178,103,1.507,104,2.144,105,1.495,106,1.571,107,1.571,108,2.144,109,2.144,110,1.122,111,1.122,112,1.419,113,1.122,114,1.297,115,1.122,116,1.297,117,1.297,118,1.297,119,1.419,120,0.85,121,0.85,122,1.725,123,1.555,124,1.297,125,2.042,126,0.85,127,1.36,128,0.736,129,0.85,130,0.85,131,0.85,132,0.85,133,1.495,134,0.85,135,0.638,136,0.972,137,0.85,138,0.736,139,1.122,140,1.571,141,1.507,142,1.758,143,1.297,144,1.507,145,0.988,146,0.988,147,0.736,148,1.122,149,0.988,150,0.988,151,1.769,152,2.042,153,1.769,154,1.769,155,1.769,156,1.161,157,1.161,158,2.398,159,1.161,160,1.161,161,1.161,162,1.161,163,1.161,164,1.161,165,1.769,166,1.161,167,0.85,168,0.638,169,0.988,170,0.85,171,0.988,272,2.121]],["title/injectables/UserService.html",[234,1.118,273,1.502]],["body/injectables/UserService.html",[12,0.057,17,0.332,18,0.332,19,0.226,21,0.519,26,1.145,27,0.82,30,0.332,31,0.458,32,0.027,33,0.027,34,1.861,37,0.818,42,0.666,43,0.332,45,0.997,46,0.818,47,0.997,48,0.735,49,0.964,58,2.353,101,2.096,102,1.535,103,0.953,105,0.615,106,0.82,110,0.709,111,1.091,112,0.615,113,1.091,119,0.615,123,0.615,133,0.615,135,0.945,136,0.615,142,1.724,167,1.724,168,1.396,175,1.119,178,1.119,188,2.957,203,2.063,204,2.063,205,2.063,214,2.513,215,2.513,216,2.096,217,3.215,218,3.545,219,2.063,220,2.821,222,3.045,223,2.513,224,2.821,234,1.091,236,1.341,237,1.341,243,1.341,244,2.063,249,2.063,250,2.821,251,2.821,253,2.063,254,2.063,255,2.821,262,2.063,267,2.063,273,1.465,274,1.679,275,1.341,276,2.582,277,2.582,278,2.582,279,3.532,280,1.679,281,1.679,282,1.679,283,2.582,284,2.582,285,1.679,286,3.146,287,3.146,288,2.582,289,1.679,290,2.582,291,3.532,292,1.679,293,2.582,294,2.582,295,3.146,296,1.679,297,1.679,298,2.582,299,2.582,300,1.679,301,1.679,302,3.146,303,2.582,304,1.679,305,2.582,306,2.582,307,2.582,308,2.582,309,1.679,310,1.679,311,1.679,312,1.679,313,1.679,314,1.679,315,2.582,316,1.679,317,1.679,318,1.679,319,1.679,320,1.679,321,1.679,322,1.679,323,2.582,324,1.679,325,1.679,326,2.582,327,1.679,328,1.679,329,1.679,330,2.582,331,1.679,332,1.679,333,1.679,334,1.679,335,1.119,336,1.679,337,1.679,338,1.679,339,2.582,340,1.679,341,1.679,342,1.679,343,1.679,344,1.679,345,1.679,346,1.679,347,1.679,348,1.679,349,1.679]],["title/coverage.html",[350,2.869]],["body/coverage.html",[6,1.557,12,0.056,19,0.429,31,0.87,32,0.043,33,0.043,34,1.557,36,2.547,42,0.546,48,0.745,89,0.96,90,1.557,92,2.424,102,1.167,107,1.557,126,1.557,128,1.347,143,1.557,148,1.347,152,1.809,193,2.705,196,1.809,197,1.809,198,1.809,200,2.547,234,1.347,273,1.809,275,2.547,350,2.547,351,2.547,352,3.188,353,2.547,354,5.228,355,4.702,356,4.702,357,4.059,358,3.188,359,4.466,360,3.188,361,3.188,362,3.188,363,3.188]],["title/miscellaneous/functions.html",[364,1.26,365,2.539]],["body/miscellaneous/functions.html",[6,2.418,12,0.049,24,2.691,32,0.049,33,0.049,43,0.799,353,3.226,364,2.291,365,3.226,366,4.038,367,4.038]],["title/index.html",[43,0.439,368,2.221,369,2.221]],["body/index.html",[3,1.883,12,0.055,16,1.34,19,0.318,24,2.212,32,0.035,33,0.035,37,1.216,42,0.612,53,0.998,61,3.067,94,1.34,99,1.34,106,1.874,115,1.854,138,0.998,147,0.998,175,2.212,176,1.887,183,1.887,186,2.652,268,1.887,335,1.574,351,1.887,370,3.32,371,3.635,372,3.734,373,4.55,374,2.362,375,2.652,376,3.32,377,2.652,378,3.067,379,1.574,380,2.362,381,2.362,382,2.362,383,3.32,384,3.32,385,4.164,386,2.362,387,2.362,388,2.362,389,2.362,390,2.362,391,2.362,392,2.362,393,2.362,394,2.362,395,2.362,396,2.362,397,2.362,398,2.362,399,2.362,400,2.362,401,2.362,402,2.362,403,2.362,404,2.362,405,3.839,406,2.362,407,2.362,408,2.362,409,2.362,410,3.32,411,2.362,412,2.362,413,2.362,414,2.362,415,4.388,416,2.362,417,2.362,418,2.362,419,2.362,420,3.839,421,2.362,422,2.362,423,2.362,424,2.362,425,3.839,426,2.362,427,2.362,428,2.362,429,2.362,430,2.362,431,3.32,432,2.362,433,3.32,434,2.212,435,2.362,436,2.362,437,3.32,438,2.362,439,3.32,440,3.32,441,2.362,442,2.362,443,2.362,444,2.362,445,2.362,446,2.362,447,2.362,448,2.362,449,2.362,450,2.362,451,1.887,452,2.362,453,2.362,454,2.362,455,2.362,456,2.362,457,3.32,458,3.32,459,2.362,460,2.362,461,2.362]],["title/modules.html",[2,1.518]],["body/modules.html",[1,2.249,2,1.675,11,1.935,12,0.049,13,1.935,32,0.049,33,0.049,335,2.641,451,3.704,462,4.637,463,4.637,464,4.915,465,3.964]],["title/overview.html",[379,2.393]],["body/overview.html",[0,1.273,1,2.878,2,1.469,3,1.972,4,2.317,5,2.317,6,1.698,7,2.317,8,2.317,9,2.777,10,2.777,11,2.269,12,0.053,13,2.477,14,2.856,15,2.317,16,1.972,31,0.949,32,0.045,33,0.045,69,2.777,91,1.469,197,1.972,234,2.172,263,2.777,264,2.777,265,2.777,273,1.972,379,2.317,466,4.646,467,3.477]],["title/properties.html",[44,1.007,468,2.221]],["body/properties.html",[12,0.055,21,0.637,32,0.048,33,0.048,44,1.224,147,1.633,170,1.887,371,3.087,372,3.087,375,3.087,377,3.087,378,3.087,469,3.864,470,3.864,471,3.864,472,3.864,473,3.864,474,3.864,475,3.864,476,3.864,477,3.864]],["title/miscellaneous/variables.html",[364,1.26,434,2.118]],["body/miscellaneous/variables.html",[12,0.057,32,0.04,33,0.04,42,0.636,43,0.579,45,0.928,46,0.928,47,0.928,48,1.185,49,1.243,53,2.05,85,2.119,92,1.429,102,1.407,105,1.407,112,1.072,119,1.072,122,1.237,123,1.072,125,1.661,127,1.623,133,1.407,136,1.072,139,1.237,140,2.094,141,2.179,143,2.094,144,2.179,145,1.661,146,1.661,147,1.237,148,1.812,149,2.583,150,1.661,167,1.429,168,1.072,169,1.661,170,1.429,171,1.661,364,1.661,434,1.951,478,4.288,479,4.288]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":328,"title":{},"body":{"injectables/UserService.html":{}}}],["0.0.1",{"_index":470,"title":{},"body":{"properties.html":{}}}],["1",{"_index":466,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":325,"title":{},"body":{"injectables/UserService.html":{}}}],["100",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["11000",{"_index":331,"title":{},"body":{"injectables/UserService.html":{}}}],["11001",{"_index":332,"title":{},"body":{"injectables/UserService.html":{}}}],["123456",{"_index":62,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["2/2",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":318,"title":{},"body":{"injectables/UserService.html":{}}}],["201",{"_index":209,"title":{},"body":{"controllers/UserController.html":{}}}],["3",{"_index":69,"title":{},"body":{"classes/CreateUserDto.html":{},"overview.html":{}}}],["4/4",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":467,"title":{},"body":{"overview.html":{}}}],["6",{"_index":64,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["8/8",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":73,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["_id",{"_index":129,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["account",{"_index":134,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["address",{"_index":60,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["algorithm",{"_index":472,"title":{},"body":{"properties.html":{}}}],["allows",{"_index":98,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["already",{"_index":303,"title":{},"body":{"injectables/UserService.html":{}}}],["api",{"_index":372,"title":{},"body":{"index.html":{},"properties.html":{}}}],["apiproperty",{"_index":78,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({example",{"_index":51,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiresponse",{"_index":238,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags",{"_index":239,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('users",{"_index":240,"title":{},"body":{"controllers/UserController.html":{}}}],["application",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":229,"title":{},"body":{"controllers/UserController.html":{}}}],["associated",{"_index":124,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["astro",{"_index":471,"title":{},"body":{"properties.html":{}}}],["astroalgorithm",{"_index":370,"title":{},"body":{"index.html":{}}}],["async",{"_index":188,"title":{},"body":{"modules/MongoDBModule.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["authentication",{"_index":384,"title":{},"body":{"index.html":{}}}],["author",{"_index":475,"title":{},"body":{"properties.html":{}}}],["available",{"_index":335,"title":{},"body":{"injectables/UserService.html":{},"index.html":{},"modules.html":{}}}],["avatar",{"_index":111,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["avatarurl",{"_index":112,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":251,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":371,"title":{},"body":{"index.html":{},"properties.html":{}}}],["badrequestexception",{"_index":232,"title":{},"body":{"controllers/UserController.html":{}}}],["badrequestexception(error.message",{"_index":256,"title":{},"body":{"controllers/UserController.html":{}}}],["based",{"_index":170,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":299,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(password",{"_index":324,"title":{},"body":{"injectables/UserService.html":{}}}],["before",{"_index":155,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["body",{"_index":227,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstraps",{"_index":367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["browse",{"_index":464,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":462,"title":{},"body":{"modules.html":{}}}],["catch",{"_index":253,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cd",{"_index":429,"title":{},"body":{"index.html":{}}}],["challenge",{"_index":147,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["challengeid",{"_index":120,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["challengename",{"_index":121,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["challenges",{"_index":115,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{}}}],["characters",{"_index":65,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters'})@matches(/^[a",{"_index":70,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":343,"title":{},"body":{"injectables/UserService.html":{}}}],["chosen",{"_index":130,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["class",{"_index":31,"title":{"classes/CreateUserDto.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"modules/MongoDBModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":35,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["clone",{"_index":415,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":427,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":263,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":264,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":265,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["coding",{"_index":377,"title":{},"body":{"index.html":{},"properties.html":{}}}],["collection",{"_index":169,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":422,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":396,"title":{},"body":{"index.html":{}}}],["completed",{"_index":114,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["completedchallenges",{"_index":119,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["comprehensive",{"_index":408,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":179,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["configmodule.forroot",{"_index":182,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["configservice",{"_index":180,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":190,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["configuration",{"_index":402,"title":{},"body":{"index.html":{}}}],["conflictexception",{"_index":294,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception('email",{"_index":337,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception('username",{"_index":334,"title":{},"body":{"injectables/UserService.html":{}}}],["connection",{"_index":176,"title":{},"body":{"modules/MongoDBModule.html":{},"index.html":{}}}],["const",{"_index":142,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":280,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(@injectmodel('users",{"_index":300,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":242,"title":{},"body":{"controllers/UserController.html":{}}}],["constructor(usermodel",{"_index":281,"title":{},"body":{"injectables/UserService.html":{}}}],["contact",{"_index":439,"title":{},"body":{"index.html":{}}}],["contain",{"_index":74,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["containing",{"_index":116,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["contribute",{"_index":447,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":442,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":443,"title":{},"body":{"index.html":{}}}],["controller",{"_index":197,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('users",{"_index":241,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":199,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["convert",{"_index":153,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["coverage",{"_index":350,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":214,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["created",{"_index":135,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["created.'})@usepipes(new",{"_index":211,"title":{},"body":{"controllers/UserController.html":{}}}],["createdat",{"_index":136,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["createuser",{"_index":204,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":248,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":207,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(userdto",{"_index":284,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":34,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":41,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["creation",{"_index":287,"title":{},"body":{"injectables/UserService.html":{}}}],["custom",{"_index":94,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{}}}],["customupdatequery",{"_index":90,"title":{"interfaces/CustomUpdateQuery.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["d",{"_index":319,"title":{},"body":{"injectables/UserService.html":{}}}],["data",{"_index":37,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"index.html":{}}}],["database",{"_index":106,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"index.html":{}}}],["databases",{"_index":397,"title":{},"body":{"index.html":{}}}],["date",{"_index":133,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["date.now",{"_index":150,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":50,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":149,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":58,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["defines",{"_index":93,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["definition",{"_index":141,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":220,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":224,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteduser",{"_index":259,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":205,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@body('userid",{"_index":258,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":219,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deletion",{"_index":342,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["details",{"_index":404,"title":{},"body":{"index.html":{}}}],["developed",{"_index":380,"title":{},"body":{"index.html":{}}}],["document",{"_index":125,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":351,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documents",{"_index":97,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["dto",{"_index":40,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["dto/user.dto",{"_index":236,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["due",{"_index":306,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":411,"title":{},"body":{"index.html":{}}}],["email",{"_index":45,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":410,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":458,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":183,"title":{},"body":{"modules/MongoDBModule.html":{},"index.html":{}}}],["ensuring",{"_index":412,"title":{},"body":{"index.html":{}}}],["env",{"_index":403,"title":{},"body":{"index.html":{}}}],["environment",{"_index":433,"title":{},"body":{"index.html":{}}}],["error",{"_index":254,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["error.code",{"_index":330,"title":{},"body":{"injectables/UserService.html":{}}}],["error.keypattern?.email",{"_index":336,"title":{},"body":{"injectables/UserService.html":{}}}],["error.keypattern?.username",{"_index":333,"title":{},"body":{"injectables/UserService.html":{}}}],["errors",{"_index":308,"title":{},"body":{"injectables/UserService.html":{}}}],["example",{"_index":61,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["exists",{"_index":304,"title":{},"body":{"injectables/UserService.html":{}}}],["explore",{"_index":457,"title":{},"body":{"index.html":{}}}],["export",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["extends",{"_index":108,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["factory",{"_index":192,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["fails",{"_index":305,"title":{},"body":{"injectables/UserService.html":{}}}],["features",{"_index":268,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["feel",{"_index":445,"title":{},"body":{"index.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":348,"title":{},"body":{"injectables/UserService.html":{}}}],["findallusers",{"_index":279,"title":{},"body":{"injectables/UserService.html":{}}}],["folder",{"_index":428,"title":{},"body":{"index.html":{}}}],["follow",{"_index":416,"title":{},"body":{"index.html":{}}}],["following",{"_index":421,"title":{},"body":{"index.html":{}}}],["format",{"_index":57,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["found",{"_index":262,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["free",{"_index":446,"title":{},"body":{"index.html":{}}}],["function",{"_index":152,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["functionality",{"_index":414,"title":{},"body":{"index.html":{}}}],["functions",{"_index":365,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":322,"title":{},"body":{"injectables/UserService.html":{}}}],["game",{"_index":378,"title":{},"body":{"index.html":{},"properties.html":{}}}],["generate",{"_index":309,"title":{},"body":{"injectables/UserService.html":{}}}],["generation",{"_index":313,"title":{},"body":{"injectables/UserService.html":{}}}],["getallusers",{"_index":206,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":368,"title":{"index.html":{}},"body":{}}],["git",{"_index":423,"title":{},"body":{"index.html":{}}}],["graph",{"_index":465,"title":{},"body":{"modules.html":{}}}],["gravatar",{"_index":298,"title":{},"body":{"injectables/UserService.html":{}}}],["gravatar.url(email",{"_index":316,"title":{},"body":{"injectables/UserService.html":{}}}],["handles",{"_index":387,"title":{},"body":{"index.html":{}}}],["handling",{"_index":277,"title":{},"body":{"injectables/UserService.html":{}}}],["hashed",{"_index":131,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["hashedpassword",{"_index":323,"title":{},"body":{"injectables/UserService.html":{}}}],["hear",{"_index":456,"title":{},"body":{"index.html":{}}}],["hosts",{"_index":374,"title":{},"body":{"index.html":{}}}],["https://github.com/saharshpatel24/astroalgorithms.git",{"_index":424,"title":{},"body":{"index.html":{}}}],["id",{"_index":222,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ideas",{"_index":448,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":128,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["ids",{"_index":117,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["import",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["imported",{"_index":184,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{}}}],["improvements",{"_index":449,"title":{},"body":{"index.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["information",{"_index":132,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["initializing",{"_index":174,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["inject",{"_index":191,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["injectable",{"_index":273,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":274,"title":{},"body":{"injectables/UserService.html":{}}}],["injectmodel",{"_index":296,"title":{},"body":{"injectables/UserService.html":{}}}],["inquiries",{"_index":450,"title":{},"body":{"index.html":{}}}],["install",{"_index":425,"title":{},"body":{"index.html":{}}}],["integrates",{"_index":395,"title":{},"body":{"index.html":{}}}],["interact",{"_index":461,"title":{},"body":{"index.html":{}}}],["interaction",{"_index":394,"title":{},"body":{"index.html":{}}}],["interface",{"_index":89,"title":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["interface/user.interface",{"_index":237,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["interfaces",{"_index":91,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":295,"title":{},"body":{"injectables/UserService.html":{}}}],["internalservererrorexception('failed",{"_index":339,"title":{},"body":{"injectables/UserService.html":{}}}],["invalid",{"_index":56,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":81,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":80,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["jest",{"_index":407,"title":{},"body":{"index.html":{}}}],["last",{"_index":137,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["lastlogin",{"_index":139,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["lastloginat",{"_index":329,"title":{},"body":{"injectables/UserService.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["letters",{"_index":75,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["leveraging",{"_index":406,"title":{},"body":{"index.html":{}}}],["license",{"_index":473,"title":{},"body":{"properties.html":{}}}],["list",{"_index":113,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["literal",{"_index":272,"title":{},"body":{"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["logic",{"_index":312,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":138,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{}}}],["love",{"_index":455,"title":{},"body":{"index.html":{}}}],["lowercase",{"_index":154,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["manages",{"_index":383,"title":{},"body":{"index.html":{}}}],["managing",{"_index":202,"title":{},"body":{"controllers/UserController.html":{}}}],["matches",{"_index":83,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":87,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":55,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["method",{"_index":314,"title":{},"body":{"injectables/UserService.html":{}}}],["methods",{"_index":203,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":151,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["minlength",{"_index":82,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":86,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":88,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":364,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":167,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo/mongo.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb",{"_index":175,"title":{},"body":{"modules/MongoDBModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["mongodbmodule",{"_index":11,"title":{"modules/MongoDBModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":103,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["mongoose.document",{"_index":109,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["mongoose.model('users",{"_index":171,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":144,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["mongoose.schema.types.objectid",{"_index":145,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":177,"title":{},"body":{"modules/MongoDBModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":271,"title":{},"body":{"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":185,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["name",{"_index":216,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["names",{"_index":118,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["navigate",{"_index":426,"title":{},"body":{"index.html":{}}}],["nest.js",{"_index":381,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["nestjs/config",{"_index":181,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["nestjs/mongoose",{"_index":178,"title":{},"body":{"modules/MongoDBModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["nestjs/swagger",{"_index":79,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["new",{"_index":102,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":288,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser",{"_index":326,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":158,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["node.js",{"_index":382,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":231,"title":{},"body":{"controllers/UserController.html":{}}}],["notfoundexception('user",{"_index":261,"title":{},"body":{"controllers/UserController.html":{}}}],["npm",{"_index":431,"title":{},"body":{"index.html":{}}}],["null",{"_index":291,"title":{},"body":{"injectables/UserService.html":{}}}],["number",{"_index":122,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["numbers",{"_index":76,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["object",{"_index":39,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["objectid",{"_index":346,"title":{},"body":{"injectables/UserService.html":{}}}],["obtaining",{"_index":435,"title":{},"body":{"index.html":{}}}],["open",{"_index":418,"title":{},"body":{"index.html":{}}}],["operations",{"_index":278,"title":{},"body":{"injectables/UserService.html":{}}}],["optional",{"_index":101,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["otherwise",{"_index":290,"title":{},"body":{"injectables/UserService.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":379,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":468,"title":{"properties.html":{}},"body":{}}],["param",{"_index":244,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":215,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["passed",{"_index":225,"title":{},"body":{"controllers/UserController.html":{}}}],["password",{"_index":46,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patel",{"_index":477,"title":{},"body":{"properties.html":{}}}],["please",{"_index":438,"title":{},"body":{"index.html":{}}}],["points",{"_index":123,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":230,"title":{},"body":{"controllers/UserController.html":{}}}],["post()@apiresponse({status",{"_index":208,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":201,"title":{},"body":{"controllers/UserController.html":{}}}],["private",{"_index":301,"title":{},"body":{"injectables/UserService.html":{}}}],["profile",{"_index":105,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":385,"title":{},"body":{"index.html":{}}}],["promise",{"_index":218,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":401,"title":{},"body":{"index.html":{}}}],["properties",{"_index":44,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"properties.html":{}}}],["provided",{"_index":344,"title":{},"body":{"injectables/UserService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["psaharsh24@gmail.com",{"_index":453,"title":{},"body":{"index.html":{}}}],["query",{"_index":96,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["r",{"_index":321,"title":{},"body":{"injectables/UserService.html":{}}}],["random",{"_index":310,"title":{},"body":{"injectables/UserService.html":{}}}],["randomavatarurl",{"_index":315,"title":{},"body":{"injectables/UserService.html":{}}}],["reach",{"_index":452,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":243,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["records",{"_index":391,"title":{},"body":{"index.html":{}}}],["ref",{"_index":146,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":338,"title":{},"body":{"injectables/UserService.html":{}}}],["registration",{"_index":388,"title":{},"body":{"index.html":{}}}],["related",{"_index":267,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["replace",{"_index":311,"title":{},"body":{"injectables/UserService.html":{}}}],["repo",{"_index":430,"title":{},"body":{"index.html":{}}}],["repository",{"_index":373,"title":{},"body":{"index.html":{}}}],["representing",{"_index":104,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["represents",{"_index":194,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserProfile.html":{}}}],["request",{"_index":226,"title":{},"body":{"controllers/UserController.html":{}}}],["required",{"_index":53,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["responsible",{"_index":173,"title":{},"body":{"modules/MongoDBModule.html":{},"modules/UserModule.html":{}}}],["results",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":293,"title":{},"body":{"injectables/UserService.html":{}}}],["retrieves",{"_index":340,"title":{},"body":{"injectables/UserService.html":{}}}],["return",{"_index":250,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":217,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["robustness",{"_index":413,"title":{},"body":{"index.html":{}}}],["root",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":420,"title":{},"body":{"index.html":{}}}],["running",{"_index":437,"title":{},"body":{"index.html":{}}}],["s",{"_index":317,"title":{},"body":{"injectables/UserService.html":{}}}],["saharsh",{"_index":476,"title":{},"body":{"properties.html":{}}}],["saving",{"_index":156,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["schema",{"_index":140,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["schema/user.schema",{"_index":270,"title":{},"body":{"modules/UserModule.html":{}}}],["securely",{"_index":389,"title":{},"body":{"index.html":{}}}],["sensitive",{"_index":436,"title":{},"body":{"index.html":{}}}],["server",{"_index":441,"title":{},"body":{"index.html":{}}}],["service",{"_index":276,"title":{},"body":{"injectables/UserService.html":{}}}],["setup",{"_index":432,"title":{},"body":{"index.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["space",{"_index":375,"title":{},"body":{"index.html":{},"properties.html":{}}}],["src/.../main.ts",{"_index":366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/main.ts",{"_index":353,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mongo/mongo.module.ts",{"_index":172,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["src/user/dto/user.dto.ts",{"_index":36,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts:21",{"_index":77,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.dto.ts:32",{"_index":59,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.dto.ts:44",{"_index":66,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/interface/user.interface.ts",{"_index":193,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserProfile.html":{},"coverage.html":{}}}],["src/user/schema/user.schema.ts",{"_index":92,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.controller.ts",{"_index":200,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:33",{"_index":213,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:46",{"_index":228,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:56",{"_index":221,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":266,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":275,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:13",{"_index":282,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":285,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:63",{"_index":292,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:74",{"_index":289,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":440,"title":{},"body":{"index.html":{}}}],["started",{"_index":369,"title":{"index.html":{}},"body":{}}],["statements",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":245,"title":{},"body":{"controllers/UserController.html":{}}}],["steps",{"_index":417,"title":{},"body":{"index.html":{}}}],["storage",{"_index":398,"title":{},"body":{"index.html":{}}}],["store",{"_index":400,"title":{},"body":{"index.html":{}}}],["string",{"_index":49,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":195,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserProfile.html":{}}}],["successfully",{"_index":210,"title":{},"body":{"controllers/UserController.html":{}}}],["support",{"_index":451,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":463,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":460,"title":{},"body":{"index.html":{}}}],["table",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["terminal",{"_index":419,"title":{},"body":{"index.html":{}}}],["test1234",{"_index":67,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["test@example.com",{"_index":52,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["testing",{"_index":405,"title":{},"body":{"index.html":{}}}],["themed",{"_index":376,"title":{},"body":{"index.html":{}}}],["this.email",{"_index":160,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["this.email.tolowercase",{"_index":161,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["this.getupdate",{"_index":164,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["this.ismodified('email",{"_index":159,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["this.usermodel.create",{"_index":327,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.find",{"_index":341,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidanddelete(userid",{"_index":349,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":252,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(userid",{"_index":260,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findallusers",{"_index":257,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":393,"title":{},"body":{"index.html":{}}}],["throw",{"_index":255,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["throws",{"_index":302,"title":{},"body":{"injectables/UserService.html":{}}}],["tracks",{"_index":392,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":38,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["transform",{"_index":247,"title":{},"body":{"controllers/UserController.html":{}}}],["true",{"_index":85,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["true})@isemail",{"_index":54,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["true})@isstring()@minlength(3",{"_index":68,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["true})@isstring()@minlength(6",{"_index":63,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["try",{"_index":249,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["type",{"_index":48,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":297,"title":{},"body":{"injectables/UserService.html":{}}}],["types.objectid.isvalid(userid",{"_index":347,"title":{},"body":{"injectables/UserService.html":{}}}],["unexpected",{"_index":307,"title":{},"body":{"injectables/UserService.html":{}}}],["unique",{"_index":127,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":409,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":474,"title":{},"body":{"properties.html":{}}}],["update",{"_index":95,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["update.email",{"_index":165,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["update.email.tolowercase",{"_index":166,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["updated",{"_index":162,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["updating",{"_index":99,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{}}}],["uri",{"_index":189,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["url",{"_index":110,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["use",{"_index":186,"title":{},"body":{"modules/MongoDBModule.html":{},"index.html":{}}}],["usefactory",{"_index":187,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["usepipes",{"_index":233,"title":{},"body":{"controllers/UserController.html":{}}}],["usepipes(new",{"_index":246,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":42,"title":{"interfaces/User.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":100,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["user.controller",{"_index":269,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":235,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":198,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdocument",{"_index":126,"title":{"interfaces/UserDocument.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["userdto",{"_index":286,"title":{},"body":{"injectables/UserService.html":{}}}],["userid",{"_index":223,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodel",{"_index":283,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":13,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":47,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["userprofile",{"_index":196,"title":{"interfaces/UserProfile.html":{}},"body":{"interfaces/User.html":{},"interfaces/UserProfile.html":{},"coverage.html":{}}}],["userprofiledocument",{"_index":107,"title":{"interfaces/UserProfileDocument.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["userprofileschema",{"_index":143,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":168,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["userschema",{"_index":148,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.pre('findoneandupdate",{"_index":163,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["userschema.pre('save",{"_index":157,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["userservice",{"_index":234,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":399,"title":{},"body":{"index.html":{}}}],["valid",{"_index":345,"title":{},"body":{"injectables/UserService.html":{}}}],["validationpipe",{"_index":212,"title":{},"body":{"controllers/UserController.html":{}}}],["validator",{"_index":84,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["value",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":434,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["variety",{"_index":390,"title":{},"body":{"index.html":{}}}],["version",{"_index":469,"title":{},"body":{"properties.html":{}}}],["visit",{"_index":459,"title":{},"body":{"index.html":{}}}],["wavatar",{"_index":320,"title":{},"body":{"injectables/UserService.html":{}}}],["we'd",{"_index":454,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":444,"title":{},"body":{"index.html":{}}}],["within",{"_index":386,"title":{},"body":{"index.html":{}}}],["z0",{"_index":72,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":71,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nMongoDBModule\n\nMongoDBModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMongoDBModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Root module of the NestJS application\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MongoDBModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserModule } from './user/user.module';\nimport { MongoDBModule } from './mongo/mongo.module';\n\n/**\n * Root module of the NestJS application\n */\n@Module({\n  imports: [MongoDBModule, UserModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object (DTO) for creating a user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'test@example.com', required: true})@IsEmail({}, {message: 'Invalid email format'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:32\n                        \n                    \n\n            \n                \n                    Email address of the user.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '123456', required: true})@IsString()@MinLength(6, {message: 'Password must be at least 6 characters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:44\n                        \n                    \n\n            \n                \n                    Password of the user.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'test1234', required: true})@IsString()@MinLength(3, {message: 'Username must be at least 3 characters'})@Matches(/^[a-zA-Z0-9]+$/, {message: 'Username must contain only letters and numbers'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:21\n                        \n                    \n\n            \n                \n                    Username of the user.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsEmail, MinLength, Matches } from 'class-validator';\n\n/**\n * Data Transfer Object (DTO) for creating a user.\n */\nexport class CreateUserDto {\n  /**\n   * Username of the user.\n   * @example 'test1234'\n   */\n  @ApiProperty({\n    example: 'test1234',\n    required: true,\n  })\n  @IsString()\n  @MinLength(3, { message: 'Username must be at least 3 characters' })\n  @Matches(/^[a-zA-Z0-9]+$/, {\n    message: 'Username must contain only letters and numbers',\n  })\n  username: string;\n\n  /**\n   * Email address of the user.\n   * @example 'test@example.com'\n   */\n  @ApiProperty({\n    example: 'test@example.com',\n    required: true,\n  })\n  @IsEmail({}, { message: 'Invalid email format' })\n  email: string;\n\n  /**\n   * Password of the user.\n   * @example '123456'\n   */\n  @ApiProperty({\n    example: '123456',\n    required: true,\n  })\n  @IsString()\n  @MinLength(6, { message: 'Password must be at least 6 characters' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomUpdateQuery.html":{"url":"interfaces/CustomUpdateQuery.html","title":"interface - CustomUpdateQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomUpdateQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schema/user.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines a custom update query for user documents.\nIt allows updating the user's email.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    New email address for updating the user's email\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose';\n\n/**\n * Interface representing user profile data in the database.\n */\ninterface UserProfileDocument extends mongoose.Document {\n  /** URL of the user's avatar */\n  avatarURL: string;\n  /** List of completed challenges containing their IDs and names */\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  /** Number of points associated with the user */\n  points: number;\n}\n\n/**\n * Interface representing the user document in the database.\n */\ninterface UserDocument extends mongoose.Document {\n  /** Unique identifier for the user */\n  _id: string;\n  /** User's chosen username */\n  username: string;\n  /** User's email address */\n  email: string;\n  /** User's hashed password */\n  password: string;\n  /** User's profile information */\n  profile: UserProfileDocument;\n  /** Date when the user account was created */\n  createdAt: Date;\n  /** Date of the user's last login */\n  lastLogin: Date;\n}\n\n/**\n * Defines a custom update query for user documents.\n * It allows updating the user's email.\n */\ninterface CustomUpdateQuery {\n  /** New email address for updating the user's email */\n  email?: string;\n}\n\n\n/**\n * Schema definition for the user profile.\n */\nconst userProfileSchema = new mongoose.Schema({\n  avatarURL: {\n    type: String,\n    required: true,\n  },\n  completedChallenges: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Challenge',\n    },\n  ],\n  points: {\n    type: Number,\n    required: true,\n  },\n});\n\n/**\n * Schema definition for the user document.\n */\nexport const userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  profile: {\n    type: userProfileSchema,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastLogin: {\n    type: Date,\n  },\n});\n\n/**\n * Middleware function to convert the email to lowercase before saving the user document.\n */\nuserSchema.pre('save', function (next) {\n  if (this.isModified('email')) {\n    this.email = this.email.toLowerCase();\n  }\n  next();\n});\n\n/**\n * Middleware function to convert the updated email to lowercase before updating the user document.\n */\nuserSchema.pre('findOneAndUpdate', function (next) {\n  const update = this.getUpdate() as CustomUpdateQuery;\n  if (update && update.email) {\n    update.email = update.email.toLowerCase();\n  }\n  next();\n});\n\n/**\n * Model for the 'Users' collection based on the user schema.\n */\nexport const User = mongoose.model('Users', userSchema);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoDBModule.html":{"url":"modules/MongoDBModule.html","title":"module - MongoDBModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoDBModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mongo/mongo.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module responsible for initializing the MongoDB connection.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n/**\n * Module responsible for initializing the MongoDB connection.\n */\n@Module({\n  imports: [\n    ConfigModule.forRoot(), // Ensure ConfigModule is imported\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule], // Import ConfigModule to use ConfigService\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n      }),\n      inject: [ConfigService], // Inject ConfigService into the factory\n    }),\n  ],\n})\nexport class MongoDBModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/user.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the structure of a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            lastLogin\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            profile\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date when the user account was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLogin:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of the user's last login\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's hashed password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profile:         UserProfile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserProfile\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's profile information\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's chosen username\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface UserProfile {\n  /** URL of the user's avatar */\n  avatarURL: string;\n  /** List of completed challenges containing their IDs and names */\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  /** Number of points associated with the user */\n  points: number;\n}\n\n/**\n * Represents the structure of a user.\n */\nexport interface User {\n  /** Unique identifier for the user */\n  _id: string;\n  /** User's chosen username */\n  username: string;\n  /** User's email address */\n  email: string;\n  /** User's hashed password */\n  password: string;\n  /** User's profile information */\n  profile: UserProfile;\n  /** Date when the user account was created */\n  createdAt: Date;\n  /** Date of the user's last login */\n  lastLogin: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n            \n                Description\n            \n            \n                Controller for managing users\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    Async\n                                getAllUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({status: 201, description: 'The user has been successfully created.'})@UsePipes(new ValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:33\n                        \n                    \n\n\n            \n                \n                        Create a new user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser data to be created\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe created user\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:56\n                        \n                    \n\n\n            \n                \n                        Delete a user by ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the user to be deleted (passed in the request body)\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe deleted user\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:46\n                        \n                    \n\n\n            \n                \n                        Get all users\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nArray of users\n\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Body,\n  NotFoundException,\n  BadRequestException,\n  ValidationPipe,\n  UsePipes,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/user.dto';\nimport { User } from './interface/user.interface';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for managing users\n */\n@ApiTags('Users')\n@Controller('users')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  /**\n   * Create a new user\n   * @param {CreateUserDto} createUserDto - User data to be created\n   * @returns {Promise} - The created user\n   */\n  @Post()\n  @ApiResponse({ status: 201, description: 'The user has been successfully created.'})\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.userService.createUser(createUserDto);\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  /**\n   * Get all users\n   * @returns {Promise} - Array of users\n   */\n  @Get()\n  async getAllUsers(): Promise {\n    return await this.userService.findAllUsers();\n  }\n\n  /**\n   * Delete a user by ID\n   * @param {string} userId - ID of the user to be deleted (passed in the request body)\n   * @returns {Promise} - The deleted user\n   */\n  @Delete()\n  async deleteUser(@Body('userId') userId: string): Promise {\n    const deletedUser = await this.userService.deleteUser(userId);\n    if (!deletedUser) {\n      throw new NotFoundException('User not found');\n    }\n    return deletedUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDocument.html":{"url":"interfaces/UserDocument.html","title":"interface - UserDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schema/user.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the user document in the database.\n\n            \n\n            \n                Extends\n            \n            \n                        mongoose.Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            lastLogin\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            profile\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date when the user account was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLogin:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of the user's last login\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's hashed password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profile:         UserProfileDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserProfileDocument\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's profile information\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's chosen username\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose';\n\n/**\n * Interface representing user profile data in the database.\n */\ninterface UserProfileDocument extends mongoose.Document {\n  /** URL of the user's avatar */\n  avatarURL: string;\n  /** List of completed challenges containing their IDs and names */\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  /** Number of points associated with the user */\n  points: number;\n}\n\n/**\n * Interface representing the user document in the database.\n */\ninterface UserDocument extends mongoose.Document {\n  /** Unique identifier for the user */\n  _id: string;\n  /** User's chosen username */\n  username: string;\n  /** User's email address */\n  email: string;\n  /** User's hashed password */\n  password: string;\n  /** User's profile information */\n  profile: UserProfileDocument;\n  /** Date when the user account was created */\n  createdAt: Date;\n  /** Date of the user's last login */\n  lastLogin: Date;\n}\n\n/**\n * Defines a custom update query for user documents.\n * It allows updating the user's email.\n */\ninterface CustomUpdateQuery {\n  /** New email address for updating the user's email */\n  email?: string;\n}\n\n\n/**\n * Schema definition for the user profile.\n */\nconst userProfileSchema = new mongoose.Schema({\n  avatarURL: {\n    type: String,\n    required: true,\n  },\n  completedChallenges: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Challenge',\n    },\n  ],\n  points: {\n    type: Number,\n    required: true,\n  },\n});\n\n/**\n * Schema definition for the user document.\n */\nexport const userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  profile: {\n    type: userProfileSchema,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastLogin: {\n    type: Date,\n  },\n});\n\n/**\n * Middleware function to convert the email to lowercase before saving the user document.\n */\nuserSchema.pre('save', function (next) {\n  if (this.isModified('email')) {\n    this.email = this.email.toLowerCase();\n  }\n  next();\n});\n\n/**\n * Middleware function to convert the updated email to lowercase before updating the user document.\n */\nuserSchema.pre('findOneAndUpdate', function (next) {\n  const update = this.getUpdate() as CustomUpdateQuery;\n  if (update && update.email) {\n    update.email = update.email.toLowerCase();\n  }\n  next();\n});\n\n/**\n * Model for the 'Users' collection based on the user schema.\n */\nexport const User = mongoose.model('Users', userSchema);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module responsible for user-related features.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { userSchema } from './schema/user.schema';\n\n/**\n * Module responsible for user-related features.\n */\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'Users', schema: userSchema }]),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProfile.html":{"url":"interfaces/UserProfile.html","title":"interface - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/user.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents user profile data structure.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarURL\n                                        \n                                \n                                \n                                        \n                                            completedChallenges\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarURL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL of the user's avatar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        completedChallenges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completedChallenges:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of completed challenges containing their IDs and names\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of points associated with the user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface UserProfile {\n  /** URL of the user's avatar */\n  avatarURL: string;\n  /** List of completed challenges containing their IDs and names */\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  /** Number of points associated with the user */\n  points: number;\n}\n\n/**\n * Represents the structure of a user.\n */\nexport interface User {\n  /** Unique identifier for the user */\n  _id: string;\n  /** User's chosen username */\n  username: string;\n  /** User's email address */\n  email: string;\n  /** User's hashed password */\n  password: string;\n  /** User's profile information */\n  profile: UserProfile;\n  /** Date when the user account was created */\n  createdAt: Date;\n  /** Date of the user's last login */\n  lastLogin: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProfileDocument.html":{"url":"interfaces/UserProfileDocument.html","title":"interface - UserProfileDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserProfileDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schema/user.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing user profile data in the database.\n\n            \n\n            \n                Extends\n            \n            \n                        mongoose.Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarURL\n                                        \n                                \n                                \n                                        \n                                            completedChallenges\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarURL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL of the user's avatar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        completedChallenges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completedChallenges:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of completed challenges containing their IDs and names\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of points associated with the user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose';\n\n/**\n * Interface representing user profile data in the database.\n */\ninterface UserProfileDocument extends mongoose.Document {\n  /** URL of the user's avatar */\n  avatarURL: string;\n  /** List of completed challenges containing their IDs and names */\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  /** Number of points associated with the user */\n  points: number;\n}\n\n/**\n * Interface representing the user document in the database.\n */\ninterface UserDocument extends mongoose.Document {\n  /** Unique identifier for the user */\n  _id: string;\n  /** User's chosen username */\n  username: string;\n  /** User's email address */\n  email: string;\n  /** User's hashed password */\n  password: string;\n  /** User's profile information */\n  profile: UserProfileDocument;\n  /** Date when the user account was created */\n  createdAt: Date;\n  /** Date of the user's last login */\n  lastLogin: Date;\n}\n\n/**\n * Defines a custom update query for user documents.\n * It allows updating the user's email.\n */\ninterface CustomUpdateQuery {\n  /** New email address for updating the user's email */\n  email?: string;\n}\n\n\n/**\n * Schema definition for the user profile.\n */\nconst userProfileSchema = new mongoose.Schema({\n  avatarURL: {\n    type: String,\n    required: true,\n  },\n  completedChallenges: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Challenge',\n    },\n  ],\n  points: {\n    type: Number,\n    required: true,\n  },\n});\n\n/**\n * Schema definition for the user document.\n */\nexport const userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  profile: {\n    type: userProfileSchema,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastLogin: {\n    type: Date,\n  },\n});\n\n/**\n * Middleware function to convert the email to lowercase before saving the user document.\n */\nuserSchema.pre('save', function (next) {\n  if (this.isModified('email')) {\n    this.email = this.email.toLowerCase();\n  }\n  next();\n});\n\n/**\n * Middleware function to convert the updated email to lowercase before updating the user document.\n */\nuserSchema.pre('findOneAndUpdate', function (next) {\n  const update = this.getUpdate() as CustomUpdateQuery;\n  if (update && update.email) {\n    update.email = update.email.toLowerCase();\n  }\n  next();\n});\n\n/**\n * Model for the 'Users' collection based on the user schema.\n */\nexport const User = mongoose.model('Users', userSchema);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service handling user-related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findAllUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(userDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Create a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser data for creation.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Newly created user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Delete a user by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the user to be deleted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Deleted user if found, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Retrieve all users.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                List of all users.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { CreateUserDto } from './dto/user.dto';\nimport { User } from './interface/user.interface';\nimport * as gravatar from 'gravatar';\nimport * as bcrypt from 'bcrypt';\n\n/**\n * Service handling user-related operations.\n */\n@Injectable()\nexport class UserService {\n  constructor(@InjectModel('Users') private readonly userModel: Model) {}\n\n  /**\n   * Create a new user.\n   * @param {CreateUserDto} userDto - User data for creation.\n   * @returns {Promise} Newly created user.\n   * @throws {ConflictException} If username or email already exists.\n   * @throws {InternalServerErrorException} If creation fails due to unexpected errors.\n   */\n  async createUser(userDto: CreateUserDto): Promise {\n    try {\n      const { username, email, password } = userDto;\n\n      // Generate a random avatar URL (replace this logic with your avatar generation method)\n      const randomAvatarUrl = gravatar.url(email, { s: '200', d: 'wavatar', r: 'g' });\n\n      const hashedPassword = await bcrypt.hash(password, 10);\n\n      const newUser = await this.userModel.create({\n        username,\n        email,\n        password: hashedPassword,\n        profile: {\n          avatarURL: randomAvatarUrl,\n          completedChallenges: [],\n          points: 0,\n        },\n        createdAt: new Date(),\n        lastLoginAt: null,\n      });\n\n      return newUser;\n    } catch (error) {\n      if (error.code === 11000 || error.code === 11001) {\n        if (error.keyPattern?.username) {\n          throw new ConflictException('Username is not available');\n        } else if (error.keyPattern?.email) {\n          throw new ConflictException('Email is already registered');\n        }\n      } else {\n        throw new InternalServerErrorException('Failed to create user');\n      }\n    }\n  }\n\n  /**\n   * Retrieve all users.\n   * @returns {Promise} List of all users.\n   */\n  async findAllUsers(): Promise {\n    // Retrieves all users from the database\n    return await this.userModel.find();\n  }\n\n  /**\n   * Delete a user by ID.\n   * @param {string} userId - ID of the user to be deleted.\n   * @returns {Promise} Deleted user if found, otherwise null.\n   * @throws {InternalServerErrorException} If deletion fails due to unexpected errors.\n   */\n  async deleteUser(userId: string): Promise {\n    try {\n      // Check if the provided userId is a valid MongoDB ObjectId\n      if (!Types.ObjectId.isValid(userId)) {\n        return null;\n      }\n      // Find and delete the user by ID\n      return await this.userModel.findByIdAndDelete(userId);\n    } catch (error) {\n      throw new InternalServerErrorException('Failed to delete user');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/user/interface/user.interface.ts\n            \n            interface\n            User\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/user/interface/user.interface.ts\n            \n            interface\n            UserProfile\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            interface\n            CustomUpdateQuery\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            interface\n            UserDocument\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            interface\n            UserProfileDocument\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            userProfileSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            userSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                80 %\n                (4/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        Bootstraps the application.\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🚀 AstroAlgorithm Backend API 🌟\nThis repository hosts the backend API for AstroAlgorithm, a space-themed coding challenges game. 🛸✨\nOverview 🌌\nThe backend API, developed with NEST.js and Node.js, manages user authentication, challenge data, and user progress within the game. 🛰️📊\nFeatures 🚀\n\nAuthentication: Handles user login and registration securely. 🔐\nChallenges: Manages a variety of space-themed coding challenges. 🌠\nUser Progress: Records and tracks user progress through challenges. 📈\nDatabase Interaction: Integrates with MongoDB or compatible databases for data storage. 🗄️\n\nDatabase 📂\nThe backend uses MongoDB to store user data, challenges, and game progress. Ensure proper configuration by updating the .env file with your database connection details. 📝\nTesting 🧪\nLeveraging Jest for comprehensive unit testing and end-to-end (E2E) testing, ensuring robustness and functionality of our backend API. 🛠️  \nClone and Use the Repository 📥\nFollow these steps to clone and use the repository:\n\nClone the Repository: Open your terminal and run the following command to clone the repository:\nExample :git clone https://github.com/SaharshPatel24/AstroAlgorithms.git\nInstall Dependencies: Navigate into the cloned repository folder and install dependencies:\nExample :cd your-repo\nnpm install\nSetup Environment Variables: For obtaining sensitive or custom environment variables required for running this application, please contact me. 📧\n\nRun the Application: Start the backend server by running:\nExample :npm run start\n\nContributing 🌟\nContributions are welcome! Feel free to contribute your ideas and improvements. 🙌\nContact 📩\nFor inquiries or support, reach out to us at psaharsh24@gmail.com. We'd love to hear from you! 🚀\nExplore API Endpoints 🛰️\n Visit Swagger API Documentation to explore and interact with the available API endpoints.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoDBModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nMongoDBModule\n\nMongoDBModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMongoDBModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Backend API for Astro Algorithm, a space-based coding challenge game\n        \n            License : UNLICENSED\n        \n            Author : Saharsh Patel\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            User   (src/.../user.schema.ts)\n                        \n                        \n                            userProfileSchema   (src/.../user.schema.ts)\n                        \n                        \n                            userSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.model('Users', userSchema)\n                    \n                \n\n            \n                \n                    Model for the 'Users' collection based on the user schema.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userProfileSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  avatarURL: {\n    type: String,\n    required: true,\n  },\n  completedChallenges: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Challenge',\n    },\n  ],\n  points: {\n    type: Number,\n    required: true,\n  },\n})\n                    \n                \n\n            \n                \n                    Schema definition for the user profile.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  profile: {\n    type: userProfileSchema,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastLogin: {\n    type: Date,\n  },\n})\n                    \n                \n\n            \n                \n                    Schema definition for the user document.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
