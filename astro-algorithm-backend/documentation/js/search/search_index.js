var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.831,1,1.614]],["body/modules/AppModule.html",[0,1.319,1,3.089,2,1.15,3,1.496,4,2.001,5,2.001,6,1.496,7,2.001,8,2.001,9,2.377,10,2.377,11,2.537,12,0.05,13,2.537,14,2.537,15,2.654,16,2.001,17,1.72,18,0.579,19,0.579,20,0.414,21,2.947,22,2.654,23,1.227,24,1.15,25,2.947,26,2.947,27,2.947,28,0.579,29,0.672,30,0.036,31,0.036]],["title/modules/ChallengesModule.html",[0,0.831,11,1.404]],["body/modules/ChallengesModule.html",[0,1.404,2,1.524,11,2.371,12,0.048,18,0.768,19,0.768,20,0.548,23,1.026,24,1.524,28,0.768,29,0.891,30,0.043,31,0.043,32,3.905]],["title/classes/CreateUserDto.html",[29,0.631,33,1.404]],["body/classes/CreateUserDto.html",[12,0.05,18,0.442,19,0.442,20,0.316,23,0.852,28,0.442,29,0.74,30,0.03,31,0.03,33,1.646,34,2.25,35,1.814,36,0.513,37,1.111,38,1.512,39,1.512,40,1.623,41,0.999,42,1.381,43,3.066,44,3.802,45,3.243,46,2.333,47,2.25,48,4.848,49,3.243,50,3.243,51,2.582,52,2.25,53,3.243,54,2.25,55,3.243,56,3.802,57,2.25,58,3.243,59,2.25,60,3.243,61,2.25,62,3.243,63,3.243,64,3.243,65,3.243,66,3.243,67,3.243,68,2.25,69,4.161,70,1.527,71,3.802,72,3.243,73,2.25,74,2.25,75,1.814,76,3.802,77,1.69,78,2.25,79,2.25,80,2.25]],["title/interfaces/CustomUpdateQuery.html",[81,0.631,82,1.404]],["body/interfaces/CustomUpdateQuery.html",[12,0.051,18,0.384,19,0.384,20,0.274,23,0.513,28,0.575,30,0.027,31,0.027,36,0.446,37,1.002,38,1.498,39,1.002,40,1.002,41,1.274,42,1.53,46,2.219,77,2.07,81,0.799,82,1.779,83,0.868,84,0.992,85,1.985,86,1.484,87,1.484,88,1.985,89,1.985,90,1.141,91,1.141,92,0.992,93,0.992,94,1.141,95,1.299,96,0.992,97,0.992,98,1.141,99,1.141,100,1.517,101,1.299,102,1.327,103,1.327,104,2.827,105,1.327,106,1.327,107,1.327,108,1.327,109,1.327,110,1.975,111,1.484,112,1.141,113,1.707,114,1.141,115,1.141,116,0.992,117,1.299,118,1.707,119,1.141,120,1.141,121,1.327,122,1.707,123,1.327,124,1.327,125,1.327,126,1.327,127,1.985,128,1.327,129,1.985,130,1.327,131,0.446,132,1.141]],["title/modules/MongoDBModule.html",[0,0.831,13,1.404]],["body/modules/MongoDBModule.html",[0,1.34,2,1.411,12,0.05,13,2.263,18,0.711,19,0.711,20,0.508,22,2.455,23,1.171,24,1.411,28,0.711,29,0.825,30,0.041,31,0.041,133,3.617,134,3.617,135,2.917,136,2.111,137,3.617,138,3.617]],["title/interfaces/User.html",[81,0.631,131,0.631]],["body/interfaces/User.html",[12,0.049,18,0.533,19,0.533,20,0.381,28,0.727,30,0.034,31,0.034,36,0.619,37,1.267,38,1.549,39,1.549,40,1.549,41,1.311,42,1.622,81,0.844,83,1.206,90,1.059,91,1.059,92,1.377,93,1.377,94,1.059,95,1.206,97,2.294,98,1.763,99,1.763,100,1.904,101,2.008,131,0.844,139,1.842,140,2.637]],["title/controllers/UserController.html",[141,1.614,142,1.614]],["body/controllers/UserController.html",[12,0.05,18,0.398,19,0.398,20,0.284,23,1.11,24,0.789,28,0.398,29,0.462,30,0.027,31,0.027,33,2.247,36,0.462,41,0.788,42,1.075,43,2.885,51,2.429,70,1.374,77,0.899,85,2.038,110,1.027,112,1.171,131,0.816,141,1.181,142,1.752,143,1.632,144,1.632,145,2.023,146,1.632,147,2.42,148,3.877,149,2.42,150,2.42,151,3.957,152,2.023,153,2.023,154,3.001,155,2.42,156,3.001,157,2.023,158,3.577,159,2.023,160,2.42,161,2.038,162,2.885,163,3.57,164,1.632,165,3.577,166,2.023,167,2.42,168,2.023,169,3.001,170,2.023,171,2.023,172,2.023,173,2.023,174,1.59,175,1.632,176,1.632,177,1.632,178,3.001,179,2.023,180,2.023,181,2.023,182,2.023,183,1.632,184,2.023,185,2.023,186,2.023,187,2.023,188,2.023,189,1.632,190,2.885,191,2.885,192,2.023,193,1.632,194,1.632,195,2.42,196,2.023,197,2.023,198,2.023,199,3.577,200,2.023,201,2.023,202,2.023]],["title/interfaces/UserDocument.html",[81,0.631,96,1.404]],["body/interfaces/UserDocument.html",[12,0.051,18,0.343,19,0.343,20,0.245,23,0.458,28,0.528,30,0.025,31,0.025,36,0.398,37,0.92,38,1.434,39,1.358,40,1.358,41,1.331,42,1.563,46,2.124,77,1.999,81,0.746,82,1.362,83,0.775,84,0.886,86,1.362,87,1.863,88,2.22,89,2.22,90,1.047,91,1.047,92,0.886,93,0.886,94,1.047,95,1.192,96,1.362,97,1.863,98,1.546,99,1.546,100,1.755,101,1.761,102,1.185,103,1.185,104,2.69,105,1.185,106,1.185,107,1.185,108,1.185,109,1.185,110,1.863,111,1.362,112,1.047,113,1.566,114,1.019,115,1.019,116,0.886,117,1.192,118,1.566,119,1.019,120,1.019,121,1.185,122,1.566,123,1.185,124,1.185,125,1.185,126,1.185,127,1.822,128,1.185,129,1.822,130,1.185,131,0.398,132,1.019]],["title/modules/UserModule.html",[0,0.831,14,1.404]],["body/modules/UserModule.html",[0,1.288,2,1.098,3,1.428,4,1.91,5,1.91,6,1.428,7,2.91,8,2.91,12,0.05,14,2.559,15,2.574,16,1.91,17,1.642,18,0.553,19,0.553,20,0.395,22,1.91,23,1.257,24,1.098,28,0.553,29,0.642,30,0.035,31,0.035,117,1.684,135,2.269,136,1.642,142,2.502,143,3.057,146,2.269,161,1.91,174,2.37,175,2.269,203,2.269,204,2.269,205,2.269,206,2.814,207,2.814,208,2.814,209,2.814,210,2.814]],["title/interfaces/UserProfile.html",[81,0.631,140,1.614]],["body/interfaces/UserProfile.html",[12,0.049,18,0.595,19,0.595,20,0.425,28,0.782,30,0.036,31,0.036,36,0.69,37,1.363,38,1.037,39,1.037,40,1.037,41,1.288,42,1.583,81,0.908,83,1.344,90,1.842,91,1.842,92,1.536,93,1.536,94,1.842,95,1.975,97,1.536,98,1.18,99,1.18,100,1.552,101,1.344,131,0.69,139,2.054,140,2.594,211,3.208]],["title/interfaces/UserProfileDocument.html",[81,0.631,87,1.404]],["body/interfaces/UserProfileDocument.html",[12,0.051,18,0.367,19,0.367,20,0.262,23,0.491,28,0.556,30,0.026,31,0.026,36,0.426,37,0.969,38,1.169,39,0.969,40,0.969,41,1.325,42,1.517,46,2.182,77,2.042,81,0.778,82,1.435,83,0.83,84,0.949,86,1.435,87,1.732,88,2.316,89,2.316,90,1.594,91,1.594,92,0.949,93,0.949,94,1.594,95,1.69,96,0.949,97,0.949,98,1.103,99,1.103,100,1.484,101,1.256,102,1.269,103,1.269,104,2.773,105,1.269,106,1.269,107,1.269,108,1.269,109,1.269,110,1.931,111,1.435,112,1.103,113,1.65,114,1.091,115,1.091,116,0.949,117,1.256,118,1.65,119,1.091,120,1.091,121,1.269,122,1.65,123,1.269,124,1.269,125,1.269,126,1.269,127,1.92,128,1.269,129,1.92,130,1.269,131,0.426,132,1.091,211,2.28]],["title/injectables/UserService.html",[174,1.229,212,1.614]],["body/injectables/UserService.html",[12,0.051,18,0.325,19,0.325,20,0.232,23,1.122,24,0.645,28,0.325,29,0.377,30,0.023,31,0.023,33,1.81,36,0.377,38,0.882,39,0.882,40,0.882,41,0.83,42,0.949,51,2.421,85,2.145,86,0.839,90,0.645,91,0.645,94,0.645,98,0.645,99,0.645,100,0.645,110,1.81,112,1.507,131,0.721,136,0.964,147,2.075,148,3.66,149,2.075,150,2.075,160,2.547,161,2.145,162,2.547,163,3.3,164,2.075,167,1.332,174,1.143,176,1.332,177,1.332,183,1.332,189,2.075,190,2.875,191,2.875,193,2.075,194,2.075,195,2.875,212,1.502,213,1.652,214,1.332,215,3.565,216,1.652,217,1.652,218,3.565,219,1.652,220,2.572,221,2.572,222,1.652,223,2.572,224,1.652,225,1.652,226,1.652,227,1.652,228,1.652,229,1.652,230,2.075,231,2.075,232,1.652,233,1.652,234,1.652,235,1.652,236,2.572,237,1.652,238,1.652,239,1.652,240,1.652,241,1.652,242,2.572,243,1.652,244,1.652,245,1.652,246,1.652,247,1.652,248,1.652,249,1.652,250,2.572,251,1.652,252,1.652,253,2.572,254,1.652,255,1.332,256,1.652,257,2.572,258,2.572,259,1.652,260,1.652,261,1.652,262,1.652,263,1.332,264,1.652,265,1.652,266,1.652,267,1.652,268,2.572,269,2.572,270,1.652,271,1.652,272,1.652]],["title/coverage.html",[273,3.021]],["body/coverage.html",[6,1.446,12,0.049,20,0.4,29,0.65,30,0.035,31,0.035,33,1.446,35,2.297,41,0.748,81,1.097,82,1.446,84,2.513,87,1.446,96,1.446,111,1.446,112,1.111,117,1.266,122,1.663,131,0.872,139,2.595,140,1.663,141,1.663,142,1.663,144,2.297,174,1.266,212,1.663,214,2.297,255,4.309,273,2.297,274,2.849,275,2.849,276,2.849,277,2.297,278,4.61,279,4.61,280,3.822,281,2.849,282,4.313,283,2.849,284,2.849,285,2.849]],["title/dependencies.html",[3,1.684,286,1.873]],["body/dependencies.html",[3,1.735,12,0.05,24,1.333,29,0.982,30,0.039,31,0.039,70,2.321,75,2.756,86,1.735,136,1.995,230,2.756,231,2.756,287,3.418,288,3.418,289,4.303,290,3.418,291,3.418,292,3.418,293,3.418,294,3.418,295,3.418,296,3.418,297,3.418,298,3.418,299,3.418,300,3.418,301,3.418,302,3.418,303,3.418,304,3.418]],["title/miscellaneous/functions.html",[305,1.356,306,2.675]],["body/miscellaneous/functions.html",[6,2.586,12,0.044,30,0.044,31,0.044,36,0.934,277,3.3,305,2.389,306,3.3,307,4.092]],["title/index.html",[36,0.53,308,2.322,309,2.322]],["body/index.html",[12,0.046,17,1.467,20,0.353,30,0.032,31,0.032,116,1.276,131,1.087,310,3.509,311,4.601,312,4.374,313,2.514,314,2.514,315,3.509,316,3.509,317,3.509,318,4.601,319,4.042,320,1.707,321,2.514,322,2.514,323,2.514,324,3.509,325,3.509,326,4.042,327,4.374,328,2.514,329,2.514,330,2.514,331,2.514,332,2.514,333,2.514,334,2.514,335,2.514,336,2.514,337,2.514,338,4.042,339,2.514,340,2.514,341,3.509,342,2.514,343,2.514,344,2.514,345,2.514,346,2.514,347,2.514,348,2.514,349,2.514,350,2.514,351,2.514,352,2.514,353,2.514,354,4.042,355,2.514,356,2.514,357,2.514,358,2.514,359,3.509,360,2.514,361,2.514,362,2.514,363,2.514,364,2.514,365,2.514,366,2.514,367,2.83,368,2.514,369,2.514,370,2.514,371,2.514,372,2.514,373,2.514,374,2.027,375,2.514,376,2.514]],["title/modules.html",[2,1.461]],["body/modules.html",[1,2.241,2,1.498,11,1.949,12,0.042,13,1.949,14,1.949,30,0.042,31,0.042,263,3.728,374,3.728,377,4.622,378,4.622,379,5.147,380,4.622]],["title/overview.html",[320,2.543]],["body/overview.html",[0,0.943,1,3.063,2,1.224,3,1.592,4,2.129,5,2.129,6,1.592,7,2.129,8,2.129,9,2.529,10,2.529,11,2.296,12,0.047,13,2.296,14,2.581,15,2.765,16,2.129,17,1.831,29,0.716,30,0.037,31,0.037,83,1.394,141,1.831,174,2.3,203,2.529,204,2.529,205,2.529,212,1.831,320,2.129,381,3.136,382,4.522,383,3.136]],["title/properties.html",[37,1.137,286,1.873]],["body/properties.html",[12,0.049,30,0.043,31,0.043,37,1.378,155,3.242,367,3.242,384,4.02,385,4.02,386,4.02,387,4.02]],["title/miscellaneous/variables.html",[305,1.356,388,2.675]],["body/miscellaneous/variables.html",[12,0.051,30,0.033,31,0.033,36,0.609,38,0.915,39,0.915,40,0.915,41,1.349,42,1.349,46,2.465,77,2.25,84,1.356,90,1.042,91,1.042,94,1.042,95,1.187,98,1.042,99,1.042,100,1.427,101,1.187,111,2.119,112,1.427,113,2.136,114,1.559,115,1.559,116,1.356,117,1.854,118,2.136,119,2.62,120,1.559,131,0.835,132,1.559,305,1.559,388,2.154,389,4.173,390,4.173]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":255,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":385,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":382,"title":{},"body":{"overview.html":{}}}],["1.8.2",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":252,"title":{},"body":{"injectables/UserService.html":{}}}],["10.0.0",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["10.2.8",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["11000",{"_index":259,"title":{},"body":{"injectables/UserService.html":{}}}],["11001",{"_index":260,"title":{},"body":{"injectables/UserService.html":{}}}],["123456",{"_index":53,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["200",{"_index":245,"title":{},"body":{"injectables/UserService.html":{}}}],["201",{"_index":154,"title":{},"body":{"controllers/UserController.html":{}}}],["3",{"_index":60,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["4",{"_index":381,"title":{},"body":{"overview.html":{}}}],["5",{"_index":383,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":55,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["7.1.16",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":64,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["_id",{"_index":97,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["already",{"_index":266,"title":{},"body":{"injectables/UserService.html":{}}}],["api",{"_index":312,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":69,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({example",{"_index":44,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiresponse",{"_index":178,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags",{"_index":179,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('users",{"_index":180,"title":{},"body":{"controllers/UserController.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["astroalgorithm",{"_index":310,"title":{},"body":{"index.html":{}}}],["async",{"_index":148,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["authentication",{"_index":325,"title":{},"body":{"index.html":{}}}],["author",{"_index":387,"title":{},"body":{"properties.html":{}}}],["available",{"_index":263,"title":{},"body":{"injectables/UserService.html":{},"modules.html":{}}}],["avatar",{"_index":236,"title":{},"body":{"injectables/UserService.html":{}}}],["avatarurl",{"_index":90,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":191,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":311,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":172,"title":{},"body":{"controllers/UserController.html":{}}}],["badrequestexception(error.message",{"_index":196,"title":{},"body":{"controllers/UserController.html":{}}}],["bcrypt",{"_index":231,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.hash(password",{"_index":251,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":170,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":379,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":377,"title":{},"body":{"modules.html":{}}}],["catch",{"_index":193,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["challenge",{"_index":116,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["challengeid",{"_index":92,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["challengename",{"_index":93,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["challenges",{"_index":318,"title":{},"body":{"index.html":{}}}],["challenges/challenges.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["challengesmodule",{"_index":11,"title":{"modules/ChallengesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"modules.html":{},"overview.html":{}}}],["characters",{"_index":56,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters'})@matches(/^[a",{"_index":61,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["class",{"_index":29,"title":{"classes/CreateUserDto.html":{}},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"classes/CreateUserDto.html":{},"modules/MongoDBModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":34,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":203,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":205,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":204,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["coding",{"_index":317,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":342,"title":{},"body":{"index.html":{}}}],["completedchallenges",{"_index":91,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["comprehensive",{"_index":357,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":349,"title":{},"body":{"index.html":{}}}],["conflictexception",{"_index":226,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception('email",{"_index":265,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception('username",{"_index":262,"title":{},"body":{"injectables/UserService.html":{}}}],["connection",{"_index":352,"title":{},"body":{"index.html":{}}}],["const",{"_index":110,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":216,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(@injectmodel('users",{"_index":232,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":182,"title":{},"body":{"controllers/UserController.html":{}}}],["constructor(usermodel",{"_index":217,"title":{},"body":{"injectables/UserService.html":{}}}],["contact",{"_index":372,"title":{},"body":{"index.html":{}}}],["contain",{"_index":65,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["contributing",{"_index":364,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":365,"title":{},"body":{"index.html":{}}}],["controller",{"_index":141,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('users",{"_index":181,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":143,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["coverage",{"_index":273,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":269,"title":{},"body":{"injectables/UserService.html":{}}}],["created",{"_index":185,"title":{},"body":{"controllers/UserController.html":{}}}],["created.'})@usepipes(new",{"_index":157,"title":{},"body":{"controllers/UserController.html":{}}}],["createdat",{"_index":99,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["createuser",{"_index":149,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":188,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":152,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(userdto",{"_index":221,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":33,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["customupdatequery",{"_index":82,"title":{"interfaces/CustomUpdateQuery.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["d",{"_index":246,"title":{},"body":{"injectables/UserService.html":{}}}],["data",{"_index":326,"title":{},"body":{"index.html":{}}}],["database",{"_index":338,"title":{},"body":{"index.html":{}}}],["databases",{"_index":343,"title":{},"body":{"index.html":{}}}],["date",{"_index":100,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["date.now",{"_index":120,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":43,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":119,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":51,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":165,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteduser",{"_index":199,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":150,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@body",{"_index":198,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(userid",{"_index":164,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":155,"title":{},"body":{"controllers/UserController.html":{},"properties.html":{}}}],["details",{"_index":353,"title":{},"body":{"index.html":{}}}],["developed",{"_index":321,"title":{},"body":{"index.html":{}}}],["disable",{"_index":103,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["document",{"_index":89,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["documentation",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["dto/user.dto",{"_index":176,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":360,"title":{},"body":{"index.html":{}}}],["email",{"_index":38,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":359,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":347,"title":{},"body":{"index.html":{}}}],["ensuring",{"_index":361,"title":{},"body":{"index.html":{}}}],["env",{"_index":351,"title":{},"body":{"index.html":{}}}],["error",{"_index":194,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["error.code",{"_index":258,"title":{},"body":{"injectables/UserService.html":{}}}],["error.keypattern?.email",{"_index":264,"title":{},"body":{"injectables/UserService.html":{}}}],["error.keypattern?.username",{"_index":261,"title":{},"body":{"injectables/UserService.html":{}}}],["eslint",{"_index":102,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["eslint/no",{"_index":107,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["example",{"_index":76,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["export",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":88,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["features",{"_index":329,"title":{},"body":{"index.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["findallusers",{"_index":215,"title":{},"body":{"injectables/UserService.html":{}}}],["format",{"_index":50,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["found",{"_index":202,"title":{},"body":{"controllers/UserController.html":{}}}],["function",{"_index":122,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["functionality",{"_index":363,"title":{},"body":{"index.html":{}}}],["functions",{"_index":306,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":249,"title":{},"body":{"injectables/UserService.html":{}}}],["game",{"_index":319,"title":{},"body":{"index.html":{}}}],["generate",{"_index":234,"title":{},"body":{"injectables/UserService.html":{}}}],["generation",{"_index":240,"title":{},"body":{"injectables/UserService.html":{}}}],["getallusers",{"_index":151,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":308,"title":{"index.html":{}},"body":{}}],["graph",{"_index":380,"title":{},"body":{"modules.html":{}}}],["gravatar",{"_index":230,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["gravatar.url(email",{"_index":243,"title":{},"body":{"injectables/UserService.html":{}}}],["handles",{"_index":330,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":250,"title":{},"body":{"injectables/UserService.html":{}}}],["hosts",{"_index":314,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":36,"title":{"index.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":212,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":213,"title":{},"body":{"injectables/UserService.html":{}}}],["injectmodel",{"_index":228,"title":{},"body":{"injectables/UserService.html":{}}}],["inquiries",{"_index":373,"title":{},"body":{"index.html":{}}}],["integrates",{"_index":340,"title":{},"body":{"index.html":{}}}],["interaction",{"_index":339,"title":{},"body":{"index.html":{}}}],["interface",{"_index":81,"title":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["interface/user.interface",{"_index":177,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["interfaces",{"_index":83,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":227,"title":{},"body":{"injectables/UserService.html":{}}}],["internalservererrorexception('failed",{"_index":268,"title":{},"body":{"injectables/UserService.html":{}}}],["invalid",{"_index":49,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":72,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":71,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["jest",{"_index":356,"title":{},"body":{"index.html":{}}}],["lastlogin",{"_index":101,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["lastloginat",{"_index":256,"title":{},"body":{"injectables/UserService.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["letters",{"_index":66,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["leveraging",{"_index":355,"title":{},"body":{"index.html":{}}}],["license",{"_index":367,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":369,"title":{},"body":{"index.html":{}}}],["line",{"_index":105,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["literal",{"_index":211,"title":{},"body":{"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{}}}],["logic",{"_index":239,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":331,"title":{},"body":{"index.html":{}}}],["manages",{"_index":324,"title":{},"body":{"index.html":{}}}],["matches",{"_index":74,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":79,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":48,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":241,"title":{},"body":{"injectables/UserService.html":{}}}],["methods",{"_index":147,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":73,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":78,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":80,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":305,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":371,"title":{},"body":{"index.html":{}}}],["model",{"_index":218,"title":{},"body":{"injectables/UserService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"modules/MongoDBModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo/mongo.module",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb",{"_index":341,"title":{},"body":{"index.html":{}}}],["mongodb+srv://saharshpatel24:developer2453@cluster0.fkmbhte.mongodb.net/astroalgorithm?retrywrites=true&w=majority",{"_index":138,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["mongodb.module.ts",{"_index":134,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["mongodbmodule",{"_index":13,"title":{"modules/MongoDBModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MongoDBModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":86,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.model('users",{"_index":132,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":113,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["mongoose.schema.types.objectid",{"_index":114,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":135,"title":{},"body":{"modules/MongoDBModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":209,"title":{},"body":{"modules/UserModule.html":{}}}],["mongoosemodule.forroot",{"_index":137,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["name",{"_index":161,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["nest.js",{"_index":322,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"modules/MongoDBModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":136,"title":{},"body":{"modules/MongoDBModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":70,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":112,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":253,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":104,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["node.js",{"_index":323,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":171,"title":{},"body":{"controllers/UserController.html":{}}}],["notfoundexception('user",{"_index":201,"title":{},"body":{"controllers/UserController.html":{}}}],["null",{"_index":257,"title":{},"body":{"injectables/UserService.html":{}}}],["number",{"_index":95,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["numbers",{"_index":67,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["optional",{"_index":85,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":320,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":286,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":160,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["password",{"_index":39,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["points",{"_index":94,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":169,"title":{},"body":{"controllers/UserController.html":{}}}],["post()@apiresponse({status",{"_index":153,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":145,"title":{},"body":{"controllers/UserController.html":{}}}],["private",{"_index":233,"title":{},"body":{"injectables/UserService.html":{}}}],["profile",{"_index":98,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":327,"title":{},"body":{"index.html":{}}}],["project",{"_index":368,"title":{},"body":{"index.html":{}}}],["promise",{"_index":163,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":348,"title":{},"body":{"index.html":{}}}],["properties",{"_index":37,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["psaharsh24@gmail.com",{"_index":376,"title":{},"body":{"index.html":{}}}],["r",{"_index":248,"title":{},"body":{"injectables/UserService.html":{}}}],["random",{"_index":235,"title":{},"body":{"injectables/UserService.html":{}}}],["randomavatarurl",{"_index":242,"title":{},"body":{"injectables/UserService.html":{}}}],["reach",{"_index":375,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":183,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["records",{"_index":335,"title":{},"body":{"index.html":{}}}],["ref",{"_index":115,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":267,"title":{},"body":{"injectables/UserService.html":{}}}],["registration",{"_index":332,"title":{},"body":{"index.html":{}}}],["replace",{"_index":238,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":313,"title":{},"body":{"index.html":{}}}],["required",{"_index":46,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["results",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":190,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":162,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["robustness",{"_index":362,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":244,"title":{},"body":{"injectables/UserService.html":{}}}],["schema",{"_index":210,"title":{},"body":{"modules/UserModule.html":{}}}],["schema/user.schema",{"_index":208,"title":{},"body":{"modules/UserModule.html":{}}}],["securely",{"_index":333,"title":{},"body":{"index.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/ChallengesModule.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"modules/MongoDBModule.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{}}}],["space",{"_index":315,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":307,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["src/challenges/challenges.module.ts",{"_index":32,"title":{},"body":{"modules/ChallengesModule.html":{}}}],["src/main.ts",{"_index":277,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mongo/mongo.module.ts",{"_index":133,"title":{},"body":{"modules/MongoDBModule.html":{}}}],["src/user/dto/user.dto.ts",{"_index":35,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts:14",{"_index":68,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.dto.ts:21",{"_index":52,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.dto.ts:29",{"_index":57,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/interface/user.interface.ts",{"_index":139,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserProfile.html":{},"coverage.html":{}}}],["src/user/schema/user.schema.ts",{"_index":84,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.controller.ts",{"_index":144,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:25",{"_index":159,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:34",{"_index":168,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:39",{"_index":166,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":206,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":214,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":219,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:13",{"_index":222,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:49",{"_index":225,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:53",{"_index":224,"title":{},"body":{"injectables/UserService.html":{}}}],["started",{"_index":309,"title":{"index.html":{}},"body":{}}],["statements",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":184,"title":{},"body":{"controllers/UserController.html":{}}}],["storage",{"_index":344,"title":{},"body":{"index.html":{}}}],["store",{"_index":346,"title":{},"body":{"index.html":{}}}],["string",{"_index":42,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":156,"title":{},"body":{"controllers/UserController.html":{}}}],["support",{"_index":374,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":378,"title":{},"body":{"modules.html":{}}}],["table",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["test1234",{"_index":58,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["test@example.com",{"_index":45,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["testing",{"_index":354,"title":{},"body":{"index.html":{}}}],["themed",{"_index":316,"title":{},"body":{"index.html":{}}}],["this.email",{"_index":124,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["this.email.tolowercase",{"_index":125,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["this.getupdate",{"_index":128,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["this.ismodified('email",{"_index":123,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["this.usermodel.create",{"_index":254,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.find",{"_index":270,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidanddelete(userid",{"_index":272,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":192,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(userid",{"_index":200,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findallusers",{"_index":197,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":337,"title":{},"body":{"index.html":{}}}],["throw",{"_index":195,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["tracks",{"_index":336,"title":{},"body":{"index.html":{}}}],["transform",{"_index":187,"title":{},"body":{"controllers/UserController.html":{}}}],["transformer",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":77,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["true})@isemail",{"_index":47,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["true})@isstring()@minlength(3",{"_index":59,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["true})@isstring()@minlength(6",{"_index":54,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["try",{"_index":189,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["type",{"_index":41,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":229,"title":{},"body":{"injectables/UserService.html":{}}}],["types.objectid.isvalid(userid",{"_index":271,"title":{},"body":{"injectables/UserService.html":{}}}],["typescript",{"_index":106,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["under",{"_index":370,"title":{},"body":{"index.html":{}}}],["unique",{"_index":118,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":358,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":386,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":108,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["update",{"_index":127,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["update.email",{"_index":129,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["update.email.tolowercase",{"_index":130,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["updating",{"_index":350,"title":{},"body":{"index.html":{}}}],["url",{"_index":237,"title":{},"body":{"injectables/UserService.html":{}}}],["usepipes",{"_index":173,"title":{},"body":{"controllers/UserController.html":{}}}],["usepipes(new",{"_index":186,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":131,"title":{"interfaces/User.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":207,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":175,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":142,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdocument",{"_index":96,"title":{"interfaces/UserDocument.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["userdto",{"_index":223,"title":{},"body":{"injectables/UserService.html":{}}}],["userid",{"_index":167,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodel",{"_index":220,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":14,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":40,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomUpdateQuery.html":{},"interfaces/User.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfile.html":{},"interfaces/UserProfileDocument.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["userprofile",{"_index":140,"title":{"interfaces/UserProfile.html":{}},"body":{"interfaces/User.html":{},"interfaces/UserProfile.html":{},"coverage.html":{}}}],["userprofiledocument",{"_index":87,"title":{"interfaces/UserProfileDocument.html":{}},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{}}}],["userprofileschema",{"_index":111,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":146,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userschema",{"_index":117,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"modules/UserModule.html":{},"interfaces/UserProfileDocument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.pre('findoneandupdate",{"_index":126,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["userschema.pre('save",{"_index":121,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["userservice",{"_index":174,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":345,"title":{},"body":{"index.html":{}}}],["validationpipe",{"_index":158,"title":{},"body":{"controllers/UserController.html":{}}}],["validator",{"_index":75,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":388,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variety",{"_index":334,"title":{},"body":{"index.html":{}}}],["vars",{"_index":109,"title":{},"body":{"interfaces/CustomUpdateQuery.html":{},"interfaces/UserDocument.html":{},"interfaces/UserProfileDocument.html":{}}}],["version",{"_index":384,"title":{},"body":{"properties.html":{}}}],["wavatar",{"_index":247,"title":{},"body":{"injectables/UserService.html":{}}}],["welcome",{"_index":366,"title":{},"body":{"index.html":{}}}],["within",{"_index":328,"title":{},"body":{"index.html":{}}}],["z0",{"_index":63,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":62,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nChallengesModule\n\nChallengesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nChallengesModule->AppModule\n\n\n\n\n\nMongoDBModule\n\nMongoDBModule\n\nAppModule -->\n\nMongoDBModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ChallengesModule\n                        \n                        \n                            MongoDBModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserModule } from './user/user.module';\nimport { MongoDBModule } from './mongo/mongo.module';\nimport { ChallengesModule } from './challenges/challenges.module';\n\n@Module({\n  imports: [MongoDBModule, UserModule, ChallengesModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChallengesModule.html":{"url":"modules/ChallengesModule.html","title":"module - ChallengesModule","body":"\n                   \n\n\n\n\n    Modules\n    ChallengesModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/challenges/challenges.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class ChallengesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'test@example.com', required: true})@IsEmail({}, {message: 'Invalid email format'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '123456', required: true})@IsString()@MinLength(6, {message: 'Password must be at least 6 characters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'test1234', required: true})@IsString()@MinLength(3, {message: 'Username must be at least 3 characters'})@Matches(/^[a-zA-Z0-9]+$/, {message: 'Username must contain only letters and numbers'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsEmail, MinLength, Matches } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    example: 'test1234',\n    required: true\n })\n  @IsString()\n  @MinLength(3, { message: 'Username must be at least 3 characters' })\n  @Matches(/^[a-zA-Z0-9]+$/, {\n    message: 'Username must contain only letters and numbers',\n  })\n  username: string;\n\n  @ApiProperty({\n    example: 'test@example.com',\n    required: true  \n  })\n  @IsEmail({}, { message: 'Invalid email format' })\n  email: string;\n\n  @ApiProperty({\n    example: '123456',\n    required: true  \n  })\n  @IsString()\n  @MinLength(6, { message: 'Password must be at least 6 characters' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomUpdateQuery.html":{"url":"interfaces/CustomUpdateQuery.html","title":"interface - CustomUpdateQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomUpdateQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schema/user.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose';\n\ninterface UserProfileDocument extends Document {\n  avatarURL: string;\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  points: number;\n}\n\ninterface UserDocument extends Document {\n  _id: string;\n  username: string;\n  email: string;\n  password: string;\n  profile: UserProfileDocument;\n  createdAt: Date;\n  lastLogin: Date;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ninterface CustomUpdateQuery {\n  email?: string;\n}\n\nconst userProfileSchema = new mongoose.Schema({\n  avatarURL: {\n    type: String,\n    required: true,\n  },\n  completedChallenges: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Challenge',\n    },\n  ],\n  points: {\n    type: Number,\n    required: true,\n  },\n});\n\nexport const userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  profile: {\n    type: userProfileSchema,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastLogin: {\n    type: Date,\n  },\n});\n\nuserSchema.pre('save', function (next) {\n  if (this.isModified('email')) {\n    this.email = this.email.toLowerCase();\n  }\n  next();\n});\n\nuserSchema.pre('findOneAndUpdate', function (next) {\n  const update = this.getUpdate() as CustomUpdateQuery;\n  if (update && update.email) {\n    update.email = update.email.toLowerCase();\n  }\n  next();\n});\n\nexport const User = mongoose.model('Users', userSchema);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoDBModule.html":{"url":"modules/MongoDBModule.html","title":"module - MongoDBModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoDBModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mongo/mongo.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // mongodb.module.ts\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot(\n      'mongodb+srv://saharshpatel24:Developer2453@cluster0.fkmbhte.mongodb.net/AstroAlgorithm?retryWrites=true&w=majority',\n    ),\n  ],\n})\nexport class MongoDBModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            lastLogin\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            profile\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLogin:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profile:         UserProfile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserProfile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserProfile {\n  avatarURL: string;\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  points: number;\n}\n\nexport interface User {\n  _id: string;\n  username: string;\n  email: string;\n  password: string;\n  profile: UserProfile;\n  createdAt: Date;\n  lastLogin: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    Async\n                                getAllUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({status: 201, description: 'The user has been successfully created.'})@UsePipes(new ValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Body,\n  NotFoundException,\n  BadRequestException,\n  ValidationPipe,\n  UsePipes,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/user.dto';\nimport { User } from './interface/user.interface';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Users')\n@Controller('users')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiResponse({ status: 201, description: 'The user has been successfully created.'})\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.userService.createUser(createUserDto);\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @Get()\n  async getAllUsers(): Promise {\n    return await this.userService.findAllUsers();\n  }\n\n  @Delete()\n  async deleteUser(@Body() userId: string): Promise {\n    const deletedUser = await this.userService.deleteUser(userId);\n    if (!deletedUser) {\n      throw new NotFoundException('User not found');\n    }\n    return deletedUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDocument.html":{"url":"interfaces/UserDocument.html","title":"interface - UserDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schema/user.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            lastLogin\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            profile\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLogin:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profile:         UserProfileDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserProfileDocument\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose';\n\ninterface UserProfileDocument extends Document {\n  avatarURL: string;\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  points: number;\n}\n\ninterface UserDocument extends Document {\n  _id: string;\n  username: string;\n  email: string;\n  password: string;\n  profile: UserProfileDocument;\n  createdAt: Date;\n  lastLogin: Date;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ninterface CustomUpdateQuery {\n  email?: string;\n}\n\nconst userProfileSchema = new mongoose.Schema({\n  avatarURL: {\n    type: String,\n    required: true,\n  },\n  completedChallenges: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Challenge',\n    },\n  ],\n  points: {\n    type: Number,\n    required: true,\n  },\n});\n\nexport const userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  profile: {\n    type: userProfileSchema,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastLogin: {\n    type: Date,\n  },\n});\n\nuserSchema.pre('save', function (next) {\n  if (this.isModified('email')) {\n    this.email = this.email.toLowerCase();\n  }\n  next();\n});\n\nuserSchema.pre('findOneAndUpdate', function (next) {\n  const update = this.getUpdate() as CustomUpdateQuery;\n  if (update && update.email) {\n    update.email = update.email.toLowerCase();\n  }\n  next();\n});\n\nexport const User = mongoose.model('Users', userSchema);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { userSchema } from './schema/user.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: 'Users', schema: userSchema }])],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProfile.html":{"url":"interfaces/UserProfile.html","title":"interface - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarURL\n                                        \n                                \n                                \n                                        \n                                            completedChallenges\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarURL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        completedChallenges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completedChallenges:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserProfile {\n  avatarURL: string;\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  points: number;\n}\n\nexport interface User {\n  _id: string;\n  username: string;\n  email: string;\n  password: string;\n  profile: UserProfile;\n  createdAt: Date;\n  lastLogin: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProfileDocument.html":{"url":"interfaces/UserProfileDocument.html","title":"interface - UserProfileDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserProfileDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schema/user.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarURL\n                                        \n                                \n                                \n                                        \n                                            completedChallenges\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarURL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        completedChallenges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completedChallenges:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose';\n\ninterface UserProfileDocument extends Document {\n  avatarURL: string;\n  completedChallenges: {\n    challengeId: string;\n    challengeName: string;\n  }[];\n  points: number;\n}\n\ninterface UserDocument extends Document {\n  _id: string;\n  username: string;\n  email: string;\n  password: string;\n  profile: UserProfileDocument;\n  createdAt: Date;\n  lastLogin: Date;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ninterface CustomUpdateQuery {\n  email?: string;\n}\n\nconst userProfileSchema = new mongoose.Schema({\n  avatarURL: {\n    type: String,\n    required: true,\n  },\n  completedChallenges: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Challenge',\n    },\n  ],\n  points: {\n    type: Number,\n    required: true,\n  },\n});\n\nexport const userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  profile: {\n    type: userProfileSchema,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastLogin: {\n    type: Date,\n  },\n});\n\nuserSchema.pre('save', function (next) {\n  if (this.isModified('email')) {\n    this.email = this.email.toLowerCase();\n  }\n  next();\n});\n\nuserSchema.pre('findOneAndUpdate', function (next) {\n  const update = this.getUpdate() as CustomUpdateQuery;\n  if (update && update.email) {\n    update.email = update.email.toLowerCase();\n  }\n  next();\n});\n\nexport const User = mongoose.model('Users', userSchema);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findAllUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(userDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { CreateUserDto } from './dto/user.dto';\nimport { User } from './interface/user.interface';\nimport * as gravatar from 'gravatar';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UserService {\n  constructor(@InjectModel('Users') private readonly userModel: Model) {}\n\n  async createUser(userDto: CreateUserDto): Promise {\n    try {\n      const { username, email, password } = userDto;\n\n      // Generate a random avatar URL (replace this logic with your avatar generation method)\n      const randomAvatarUrl = gravatar.url(email, { s: '200', d: 'wavatar', r: 'g' });\n\n      const hashedPassword = await bcrypt.hash(password, 10);\n\n      const newUser = await this.userModel.create({\n        username,\n        email,\n        password: hashedPassword,\n        profile: {\n          avatarURL: randomAvatarUrl,\n          completedChallenges: [],\n          points: 0,\n        },\n        createdAt: new Date(),\n        lastLoginAt: null,\n      });\n\n      return newUser;\n    } catch (error) {\n      if (error.code === 11000 || error.code === 11001) {\n        if (error.keyPattern?.username) {\n          throw new ConflictException('Username is not available');\n        } else if (error.keyPattern?.email) {\n          throw new ConflictException('Email is already registered');\n        }\n      } else {\n        throw new InternalServerErrorException('Failed to create user');\n      }\n    }\n  }\n\n  async findAllUsers(): Promise {\n    return await this.userModel.find();\n  }\n\n  async deleteUser(userId: string): Promise {\n    try {\n      if (!Types.ObjectId.isValid(userId)) {\n        return null;\n      }\n      return await this.userModel.findByIdAndDelete(userId);\n    } catch (error) {\n      throw new InternalServerErrorException('Failed to create user');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/interface/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/interface/user.interface.ts\n            \n            interface\n            UserProfile\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            interface\n            CustomUpdateQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            interface\n            UserDocument\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            interface\n            UserProfileDocument\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            userProfileSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            userSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.2.8\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mongoose : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.16\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            gravatar : ^1.8.2\n        \n            mongoose : ^8.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🚀 AstroAlgorithm Backend API\nThis repository hosts the backend API for AstroAlgorithm, a space-themed coding challenges game.\nOverview\nThe backend API, developed with NEST.js and Node.js, manages user authentication, challenge data, and user progress within the game.\nFeatures\n\nAuthentication: Handles user login and registration securely. 🔐\nChallenges: Manages a variety of space-themed coding challenges. 🌌\nUser Progress: Records and tracks user progress through challenges. 📈\nDatabase Interaction: Integrates with MongoDB or compatible databases for data storage. 🗃️\n\nDatabase\nThe backend uses MongoDB to store user data, challenges, and game progress. Ensure proper configuration by updating the .env file with your database connection details.\nTesting\nLeveraging Jest for comprehensive unit testing and end-to-end (E2E) testing, ensuring robustness and functionality of our backend API. 🧪  \nContributing\nContributions are welcome!\nLicense\nThis project is licensed under the MIT License.\nContact\nFor inquiries or support, reach out to us at psaharsh24@gmail.com.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChallengesModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoDBModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nChallengesModule\n\nChallengesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nChallengesModule->AppModule\n\n\n\n\n\nMongoDBModule\n\nMongoDBModule\n\nAppModule -->\n\nMongoDBModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            User   (src/.../user.schema.ts)\n                        \n                        \n                            userProfileSchema   (src/.../user.schema.ts)\n                        \n                        \n                            userSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.model('Users', userSchema)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userProfileSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  avatarURL: {\n    type: String,\n    required: true,\n  },\n  completedChallenges: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Challenge',\n    },\n  ],\n  points: {\n    type: Number,\n    required: true,\n  },\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  profile: {\n    type: userProfileSchema,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastLogin: {\n    type: Date,\n  },\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
